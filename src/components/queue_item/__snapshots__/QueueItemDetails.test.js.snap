// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<QueueItemDetails /> snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    assignments={Array []}
    isAssigning={false}
    kappSlug="queue"
    openNewItemMenu={[Function]}
    prohibitSubtasks={false}
    queueItem={
        Object {
            "children": Array [],
            "coreState": "Draft",
            "form": Object {
              "name": "test form",
            },
            "handle": "handle",
            "id": "id",
            "values": Object {
              "Summary": "this is the summary",
            },
          }
    }
    setAssignment={[Function]}
    setIsAssigning={[Function]}
    toggleAssigning={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="scroll-wrapper"
>
        <div
                className="general"
        >
                <Unknown
                        prevAndNext={undefined}
                        queueItem={
                                Object {
                                        "children": Array [],
                                        "coreState": "Draft",
                                        "form": Object {
                                          "name": "test form",
                                        },
                                        "handle": "handle",
                                        "id": "id",
                                        "values": Object {
                                          "Summary": "this is the summary",
                                        },
                                      }
                        }
                />
                <h1>
                        test form
                         (
                        handle
                        )
                </h1>
                <p
                        className="summary"
                >
                        this is the summary
                </p>
                <pre />
                <div
                        className="actions"
                >
                        <Unknown
                                queueItem={
                                        Object {
                                                "children": Array [],
                                                "coreState": "Draft",
                                                "form": Object {
                                                  "name": "test form",
                                                },
                                                "handle": "handle",
                                                "id": "id",
                                                "values": Object {
                                                  "Summary": "this is the summary",
                                                },
                                              }
                                }
                                readOnly={false}
                                toggle={[Function]}
                        />
                        <Connect(withProps(withHandlers(Component)))
                                className="btn btn-primary wally-button"
                                onGrabbed={undefined}
                                onWorked={undefined}
                                queueItem={
                                        Object {
                                                "children": Array [],
                                                "coreState": "Draft",
                                                "form": Object {
                                                  "name": "test form",
                                                },
                                                "handle": "handle",
                                                "id": "id",
                                                "values": Object {
                                                  "Summary": "this is the summary",
                                                },
                                              }
                                }
                        />
                </div>
                <ul
                        className="list-group timestamps"
                >
                        <li
                                className="list-group-item timestamp"
                        >
                                <span
                                        className="label"
                                >
                                        Due
                                </span>
                                <span
                                        className="value"
                                >
                                        <TimeAgo
                                                id="due-date"
                                                timestamp={undefined}
                                        />
                                </span>
                        </li>
                        <li
                                className="list-group-item timestamp"
                        >
                                <span
                                        className="label"
                                >
                                        Updated
                                </span>
                                <span
                                        className="value"
                                >
                                        <TimeAgo
                                                id="updated-at"
                                                timestamp={undefined}
                                        />
                                </span>
                        </li>
                        <li
                                className="list-group-item timestamp"
                        >
                                <span
                                        className="label"
                                >
                                        Created
                                </span>
                                <span
                                        className="value"
                                >
                                        <TimeAgo
                                                id="created-at"
                                                timestamp={undefined}
                                        />
                                </span>
                        </li>
                </ul>
        </div>
        <div
                className="subtasks-section"
        >
                <h2
                        className="section__title"
                >
                        Subtasks
                        <button
                                className="btn btn-link"
                                onClick={[Function]}
                        >
                                <span
                                        className="fa fa-plus"
                                />
                        </button>
                </h2>
                <div
                        className="empty-subtasks"
                >
                        <h5>
                                No Subtasks to display
                        </h5>
                        <h6>
                                Subtasks are an easy way to create smaller and/or related tasks to parent task.
                        </h6>
                </div>
        </div>
</div>,
      "className": "queue-item-details",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="general"
>
            <Unknown
                        prevAndNext={undefined}
                        queueItem={
                                    Object {
                                                "children": Array [],
                                                "coreState": "Draft",
                                                "form": Object {
                                                  "name": "test form",
                                                },
                                                "handle": "handle",
                                                "id": "id",
                                                "values": Object {
                                                  "Summary": "this is the summary",
                                                },
                                              }
                        }
            />
            <h1>
                        test form
                         (
                        handle
                        )
            </h1>
            <p
                        className="summary"
            >
                        this is the summary
            </p>
            <pre />
            <div
                        className="actions"
            >
                        <Unknown
                                    queueItem={
                                                Object {
                                                            "children": Array [],
                                                            "coreState": "Draft",
                                                            "form": Object {
                                                              "name": "test form",
                                                            },
                                                            "handle": "handle",
                                                            "id": "id",
                                                            "values": Object {
                                                              "Summary": "this is the summary",
                                                            },
                                                          }
                                    }
                                    readOnly={false}
                                    toggle={[Function]}
                        />
                        <Connect(withProps(withHandlers(Component)))
                                    className="btn btn-primary wally-button"
                                    onGrabbed={undefined}
                                    onWorked={undefined}
                                    queueItem={
                                                Object {
                                                            "children": Array [],
                                                            "coreState": "Draft",
                                                            "form": Object {
                                                              "name": "test form",
                                                            },
                                                            "handle": "handle",
                                                            "id": "id",
                                                            "values": Object {
                                                              "Summary": "this is the summary",
                                                            },
                                                          }
                                    }
                        />
            </div>
            <ul
                        className="list-group timestamps"
            >
                        <li
                                    className="list-group-item timestamp"
                        >
                                    <span
                                                className="label"
                                    >
                                                Due
                                    </span>
                                    <span
                                                className="value"
                                    >
                                                <TimeAgo
                                                            id="due-date"
                                                            timestamp={undefined}
                                                />
                                    </span>
                        </li>
                        <li
                                    className="list-group-item timestamp"
                        >
                                    <span
                                                className="label"
                                    >
                                                Updated
                                    </span>
                                    <span
                                                className="value"
                                    >
                                                <TimeAgo
                                                            id="updated-at"
                                                            timestamp={undefined}
                                                />
                                    </span>
                        </li>
                        <li
                                    className="list-group-item timestamp"
                        >
                                    <span
                                                className="label"
                                    >
                                                Created
                                    </span>
                                    <span
                                                className="value"
                                    >
                                                <TimeAgo
                                                            id="created-at"
                                                            timestamp={undefined}
                                                />
                                    </span>
                        </li>
            </ul>
</div>,
          <div
            className="subtasks-section"
>
            <h2
                        className="section__title"
            >
                        Subtasks
                        <button
                                    className="btn btn-link"
                                    onClick={[Function]}
                        >
                                    <span
                                                className="fa fa-plus"
                                    />
                        </button>
            </h2>
            <div
                        className="empty-subtasks"
            >
                        <h5>
                                    No Subtasks to display
                        </h5>
                        <h6>
                                    Subtasks are an easy way to create smaller and/or related tasks to parent task.
                        </h6>
            </div>
</div>,
        ],
        "className": "scroll-wrapper",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              undefined,
              <Unknown
                prevAndNext={undefined}
                queueItem={
                                Object {
                                                "children": Array [],
                                                "coreState": "Draft",
                                                "form": Object {
                                                  "name": "test form",
                                                },
                                                "handle": "handle",
                                                "id": "id",
                                                "values": Object {
                                                  "Summary": "this is the summary",
                                                },
                                              }
                }
/>,
              <h1>
                test form
                 (
                handle
                )
</h1>,
              <p
                className="summary"
>
                this is the summary
</p>,
              <pre />,
              <div
                className="actions"
>
                <Unknown
                                queueItem={
                                                Object {
                                                                "children": Array [],
                                                                "coreState": "Draft",
                                                                "form": Object {
                                                                  "name": "test form",
                                                                },
                                                                "handle": "handle",
                                                                "id": "id",
                                                                "values": Object {
                                                                  "Summary": "this is the summary",
                                                                },
                                                              }
                                }
                                readOnly={false}
                                toggle={[Function]}
                />
                <Connect(withProps(withHandlers(Component)))
                                className="btn btn-primary wally-button"
                                onGrabbed={undefined}
                                onWorked={undefined}
                                queueItem={
                                                Object {
                                                                "children": Array [],
                                                                "coreState": "Draft",
                                                                "form": Object {
                                                                  "name": "test form",
                                                                },
                                                                "handle": "handle",
                                                                "id": "id",
                                                                "values": Object {
                                                                  "Summary": "this is the summary",
                                                                },
                                                              }
                                }
                />
</div>,
              undefined,
              undefined,
              <ul
                className="list-group timestamps"
>
                <li
                                className="list-group-item timestamp"
                >
                                <span
                                                className="label"
                                >
                                                Due
                                </span>
                                <span
                                                className="value"
                                >
                                                <TimeAgo
                                                                id="due-date"
                                                                timestamp={undefined}
                                                />
                                </span>
                </li>
                <li
                                className="list-group-item timestamp"
                >
                                <span
                                                className="label"
                                >
                                                Updated
                                </span>
                                <span
                                                className="value"
                                >
                                                <TimeAgo
                                                                id="updated-at"
                                                                timestamp={undefined}
                                                />
                                </span>
                </li>
                <li
                                className="list-group-item timestamp"
                >
                                <span
                                                className="label"
                                >
                                                Created
                                </span>
                                <span
                                                className="value"
                                >
                                                <TimeAgo
                                                                id="created-at"
                                                                timestamp={undefined}
                                                />
                                </span>
                </li>
</ul>,
            ],
            "className": "general",
          },
          "ref": null,
          "rendered": Array [
            undefined,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "prevAndNext": undefined,
                "queueItem": Object {
                  "children": Array [],
                  "coreState": "Draft",
                  "form": Object {
                    "name": "test form",
                  },
                  "handle": "handle",
                  "id": "id",
                  "values": Object {
                    "Summary": "this is the summary",
                  },
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "test form",
                  " (",
                  "handle",
                  ")",
                ],
              },
              "ref": null,
              "rendered": Array [
                "test form",
                " (",
                "handle",
                ")",
              ],
              "type": "h1",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "this is the summary",
                "className": "summary",
              },
              "ref": null,
              "rendered": "this is the summary",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": "pre",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Unknown
                    queueItem={
                                        Object {
                                                            "children": Array [],
                                                            "coreState": "Draft",
                                                            "form": Object {
                                                              "name": "test form",
                                                            },
                                                            "handle": "handle",
                                                            "id": "id",
                                                            "values": Object {
                                                              "Summary": "this is the summary",
                                                            },
                                                          }
                    }
                    readOnly={false}
                    toggle={[Function]}
/>,
                  false,
                  <Connect(withProps(withHandlers(Component)))
                    className="btn btn-primary wally-button"
                    onGrabbed={undefined}
                    onWorked={undefined}
                    queueItem={
                                        Object {
                                                            "children": Array [],
                                                            "coreState": "Draft",
                                                            "form": Object {
                                                              "name": "test form",
                                                            },
                                                            "handle": "handle",
                                                            "id": "id",
                                                            "values": Object {
                                                              "Summary": "this is the summary",
                                                            },
                                                          }
                    }
/>,
                ],
                "className": "actions",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "queueItem": Object {
                      "children": Array [],
                      "coreState": "Draft",
                      "form": Object {
                        "name": "test form",
                      },
                      "handle": "handle",
                      "id": "id",
                      "values": Object {
                        "Summary": "this is the summary",
                      },
                    },
                    "readOnly": false,
                    "toggle": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                false,
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "className": "btn btn-primary wally-button",
                    "onGrabbed": undefined,
                    "onWorked": undefined,
                    "queueItem": Object {
                      "children": Array [],
                      "coreState": "Draft",
                      "form": Object {
                        "name": "test form",
                      },
                      "handle": "handle",
                      "id": "id",
                      "values": Object {
                        "Summary": "this is the summary",
                      },
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            undefined,
            undefined,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <li
                    className="list-group-item timestamp"
>
                    <span
                                        className="label"
                    >
                                        Due
                    </span>
                    <span
                                        className="value"
                    >
                                        <TimeAgo
                                                            id="due-date"
                                                            timestamp={undefined}
                                        />
                    </span>
</li>,
                  <li
                    className="list-group-item timestamp"
>
                    <span
                                        className="label"
                    >
                                        Updated
                    </span>
                    <span
                                        className="value"
                    >
                                        <TimeAgo
                                                            id="updated-at"
                                                            timestamp={undefined}
                                        />
                    </span>
</li>,
                  <li
                    className="list-group-item timestamp"
>
                    <span
                                        className="label"
                    >
                                        Created
                    </span>
                    <span
                                        className="value"
                    >
                                        <TimeAgo
                                                            id="created-at"
                                                            timestamp={undefined}
                                        />
                    </span>
</li>,
                ],
                "className": "list-group timestamps",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <span
                        className="label"
>
                        Due
</span>,
                      <span
                        className="value"
>
                        <TimeAgo
                                                id="due-date"
                                                timestamp={undefined}
                        />
</span>,
                    ],
                    "className": "list-group-item timestamp",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Due",
                        "className": "label",
                      },
                      "ref": null,
                      "rendered": "Due",
                      "type": "span",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <TimeAgo
                          id="due-date"
                          timestamp={undefined}
/>,
                        "className": "value",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "id": "due-date",
                          "timestamp": undefined,
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": "span",
                    },
                  ],
                  "type": "li",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <span
                        className="label"
>
                        Updated
</span>,
                      <span
                        className="value"
>
                        <TimeAgo
                                                id="updated-at"
                                                timestamp={undefined}
                        />
</span>,
                    ],
                    "className": "list-group-item timestamp",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Updated",
                        "className": "label",
                      },
                      "ref": null,
                      "rendered": "Updated",
                      "type": "span",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <TimeAgo
                          id="updated-at"
                          timestamp={undefined}
/>,
                        "className": "value",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "id": "updated-at",
                          "timestamp": undefined,
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": "span",
                    },
                  ],
                  "type": "li",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <span
                        className="label"
>
                        Created
</span>,
                      <span
                        className="value"
>
                        <TimeAgo
                                                id="created-at"
                                                timestamp={undefined}
                        />
</span>,
                    ],
                    "className": "list-group-item timestamp",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Created",
                        "className": "label",
                      },
                      "ref": null,
                      "rendered": "Created",
                      "type": "span",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <TimeAgo
                          id="created-at"
                          timestamp={undefined}
/>,
                        "className": "value",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "id": "created-at",
                          "timestamp": undefined,
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": "span",
                    },
                  ],
                  "type": "li",
                },
              ],
              "type": "ul",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h2
                className="section__title"
>
                Subtasks
                <button
                                className="btn btn-link"
                                onClick={[Function]}
                >
                                <span
                                                className="fa fa-plus"
                                />
                </button>
</h2>,
              false,
              <div
                className="empty-subtasks"
>
                <h5>
                                No Subtasks to display
                </h5>
                <h6>
                                Subtasks are an easy way to create smaller and/or related tasks to parent task.
                </h6>
</div>,
            ],
            "className": "subtasks-section",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Subtasks",
                  <button
                    className="btn btn-link"
                    onClick={[Function]}
>
                    <span
                                        className="fa fa-plus"
                    />
</button>,
                ],
                "className": "section__title",
              },
              "ref": null,
              "rendered": Array [
                "Subtasks",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <span
                      className="fa fa-plus"
/>,
                    "className": "btn btn-link",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "fa fa-plus",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "span",
                  },
                  "type": "button",
                },
              ],
              "type": "h2",
            },
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h5>
                    No Subtasks to display
</h5>,
                  <h6>
                    Subtasks are an easy way to create smaller and/or related tasks to parent task.
</h6>,
                ],
                "className": "empty-subtasks",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "No Subtasks to display",
                  },
                  "ref": null,
                  "rendered": "No Subtasks to display",
                  "type": "h5",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Subtasks are an easy way to create smaller and/or related tasks to parent task.",
                  },
                  "ref": null,
                  "rendered": "Subtasks are an easy way to create smaller and/or related tasks to parent task.",
                  "type": "h6",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="scroll-wrapper"
>
          <div
                    className="general"
          >
                    <Unknown
                              prevAndNext={undefined}
                              queueItem={
                                        Object {
                                                  "children": Array [],
                                                  "coreState": "Draft",
                                                  "form": Object {
                                                    "name": "test form",
                                                  },
                                                  "handle": "handle",
                                                  "id": "id",
                                                  "values": Object {
                                                    "Summary": "this is the summary",
                                                  },
                                                }
                              }
                    />
                    <h1>
                              test form
                               (
                              handle
                              )
                    </h1>
                    <p
                              className="summary"
                    >
                              this is the summary
                    </p>
                    <pre />
                    <div
                              className="actions"
                    >
                              <Unknown
                                        queueItem={
                                                  Object {
                                                            "children": Array [],
                                                            "coreState": "Draft",
                                                            "form": Object {
                                                              "name": "test form",
                                                            },
                                                            "handle": "handle",
                                                            "id": "id",
                                                            "values": Object {
                                                              "Summary": "this is the summary",
                                                            },
                                                          }
                                        }
                                        readOnly={false}
                                        toggle={[Function]}
                              />
                              <Connect(withProps(withHandlers(Component)))
                                        className="btn btn-primary wally-button"
                                        onGrabbed={undefined}
                                        onWorked={undefined}
                                        queueItem={
                                                  Object {
                                                            "children": Array [],
                                                            "coreState": "Draft",
                                                            "form": Object {
                                                              "name": "test form",
                                                            },
                                                            "handle": "handle",
                                                            "id": "id",
                                                            "values": Object {
                                                              "Summary": "this is the summary",
                                                            },
                                                          }
                                        }
                              />
                    </div>
                    <ul
                              className="list-group timestamps"
                    >
                              <li
                                        className="list-group-item timestamp"
                              >
                                        <span
                                                  className="label"
                                        >
                                                  Due
                                        </span>
                                        <span
                                                  className="value"
                                        >
                                                  <TimeAgo
                                                            id="due-date"
                                                            timestamp={undefined}
                                                  />
                                        </span>
                              </li>
                              <li
                                        className="list-group-item timestamp"
                              >
                                        <span
                                                  className="label"
                                        >
                                                  Updated
                                        </span>
                                        <span
                                                  className="value"
                                        >
                                                  <TimeAgo
                                                            id="updated-at"
                                                            timestamp={undefined}
                                                  />
                                        </span>
                              </li>
                              <li
                                        className="list-group-item timestamp"
                              >
                                        <span
                                                  className="label"
                                        >
                                                  Created
                                        </span>
                                        <span
                                                  className="value"
                                        >
                                                  <TimeAgo
                                                            id="created-at"
                                                            timestamp={undefined}
                                                  />
                                        </span>
                              </li>
                    </ul>
          </div>
          <div
                    className="subtasks-section"
          >
                    <h2
                              className="section__title"
                    >
                              Subtasks
                              <button
                                        className="btn btn-link"
                                        onClick={[Function]}
                              >
                                        <span
                                                  className="fa fa-plus"
                                        />
                              </button>
                    </h2>
                    <div
                              className="empty-subtasks"
                    >
                              <h5>
                                        No Subtasks to display
                              </h5>
                              <h6>
                                        Subtasks are an easy way to create smaller and/or related tasks to parent task.
                              </h6>
                    </div>
          </div>
</div>,
        "className": "queue-item-details",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="general"
>
              <Unknown
                            prevAndNext={undefined}
                            queueItem={
                                          Object {
                                                        "children": Array [],
                                                        "coreState": "Draft",
                                                        "form": Object {
                                                          "name": "test form",
                                                        },
                                                        "handle": "handle",
                                                        "id": "id",
                                                        "values": Object {
                                                          "Summary": "this is the summary",
                                                        },
                                                      }
                            }
              />
              <h1>
                            test form
                             (
                            handle
                            )
              </h1>
              <p
                            className="summary"
              >
                            this is the summary
              </p>
              <pre />
              <div
                            className="actions"
              >
                            <Unknown
                                          queueItem={
                                                        Object {
                                                                      "children": Array [],
                                                                      "coreState": "Draft",
                                                                      "form": Object {
                                                                        "name": "test form",
                                                                      },
                                                                      "handle": "handle",
                                                                      "id": "id",
                                                                      "values": Object {
                                                                        "Summary": "this is the summary",
                                                                      },
                                                                    }
                                          }
                                          readOnly={false}
                                          toggle={[Function]}
                            />
                            <Connect(withProps(withHandlers(Component)))
                                          className="btn btn-primary wally-button"
                                          onGrabbed={undefined}
                                          onWorked={undefined}
                                          queueItem={
                                                        Object {
                                                                      "children": Array [],
                                                                      "coreState": "Draft",
                                                                      "form": Object {
                                                                        "name": "test form",
                                                                      },
                                                                      "handle": "handle",
                                                                      "id": "id",
                                                                      "values": Object {
                                                                        "Summary": "this is the summary",
                                                                      },
                                                                    }
                                          }
                            />
              </div>
              <ul
                            className="list-group timestamps"
              >
                            <li
                                          className="list-group-item timestamp"
                            >
                                          <span
                                                        className="label"
                                          >
                                                        Due
                                          </span>
                                          <span
                                                        className="value"
                                          >
                                                        <TimeAgo
                                                                      id="due-date"
                                                                      timestamp={undefined}
                                                        />
                                          </span>
                            </li>
                            <li
                                          className="list-group-item timestamp"
                            >
                                          <span
                                                        className="label"
                                          >
                                                        Updated
                                          </span>
                                          <span
                                                        className="value"
                                          >
                                                        <TimeAgo
                                                                      id="updated-at"
                                                                      timestamp={undefined}
                                                        />
                                          </span>
                            </li>
                            <li
                                          className="list-group-item timestamp"
                            >
                                          <span
                                                        className="label"
                                          >
                                                        Created
                                          </span>
                                          <span
                                                        className="value"
                                          >
                                                        <TimeAgo
                                                                      id="created-at"
                                                                      timestamp={undefined}
                                                        />
                                          </span>
                            </li>
              </ul>
</div>,
            <div
              className="subtasks-section"
>
              <h2
                            className="section__title"
              >
                            Subtasks
                            <button
                                          className="btn btn-link"
                                          onClick={[Function]}
                            >
                                          <span
                                                        className="fa fa-plus"
                                          />
                            </button>
              </h2>
              <div
                            className="empty-subtasks"
              >
                            <h5>
                                          No Subtasks to display
                            </h5>
                            <h6>
                                          Subtasks are an easy way to create smaller and/or related tasks to parent task.
                            </h6>
              </div>
</div>,
          ],
          "className": "scroll-wrapper",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                undefined,
                <Unknown
                  prevAndNext={undefined}
                  queueItem={
                                    Object {
                                                      "children": Array [],
                                                      "coreState": "Draft",
                                                      "form": Object {
                                                        "name": "test form",
                                                      },
                                                      "handle": "handle",
                                                      "id": "id",
                                                      "values": Object {
                                                        "Summary": "this is the summary",
                                                      },
                                                    }
                  }
/>,
                <h1>
                  test form
                   (
                  handle
                  )
</h1>,
                <p
                  className="summary"
>
                  this is the summary
</p>,
                <pre />,
                <div
                  className="actions"
>
                  <Unknown
                                    queueItem={
                                                      Object {
                                                                        "children": Array [],
                                                                        "coreState": "Draft",
                                                                        "form": Object {
                                                                          "name": "test form",
                                                                        },
                                                                        "handle": "handle",
                                                                        "id": "id",
                                                                        "values": Object {
                                                                          "Summary": "this is the summary",
                                                                        },
                                                                      }
                                    }
                                    readOnly={false}
                                    toggle={[Function]}
                  />
                  <Connect(withProps(withHandlers(Component)))
                                    className="btn btn-primary wally-button"
                                    onGrabbed={undefined}
                                    onWorked={undefined}
                                    queueItem={
                                                      Object {
                                                                        "children": Array [],
                                                                        "coreState": "Draft",
                                                                        "form": Object {
                                                                          "name": "test form",
                                                                        },
                                                                        "handle": "handle",
                                                                        "id": "id",
                                                                        "values": Object {
                                                                          "Summary": "this is the summary",
                                                                        },
                                                                      }
                                    }
                  />
</div>,
                undefined,
                undefined,
                <ul
                  className="list-group timestamps"
>
                  <li
                                    className="list-group-item timestamp"
                  >
                                    <span
                                                      className="label"
                                    >
                                                      Due
                                    </span>
                                    <span
                                                      className="value"
                                    >
                                                      <TimeAgo
                                                                        id="due-date"
                                                                        timestamp={undefined}
                                                      />
                                    </span>
                  </li>
                  <li
                                    className="list-group-item timestamp"
                  >
                                    <span
                                                      className="label"
                                    >
                                                      Updated
                                    </span>
                                    <span
                                                      className="value"
                                    >
                                                      <TimeAgo
                                                                        id="updated-at"
                                                                        timestamp={undefined}
                                                      />
                                    </span>
                  </li>
                  <li
                                    className="list-group-item timestamp"
                  >
                                    <span
                                                      className="label"
                                    >
                                                      Created
                                    </span>
                                    <span
                                                      className="value"
                                    >
                                                      <TimeAgo
                                                                        id="created-at"
                                                                        timestamp={undefined}
                                                      />
                                    </span>
                  </li>
</ul>,
              ],
              "className": "general",
            },
            "ref": null,
            "rendered": Array [
              undefined,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "prevAndNext": undefined,
                  "queueItem": Object {
                    "children": Array [],
                    "coreState": "Draft",
                    "form": Object {
                      "name": "test form",
                    },
                    "handle": "handle",
                    "id": "id",
                    "values": Object {
                      "Summary": "this is the summary",
                    },
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "test form",
                    " (",
                    "handle",
                    ")",
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "test form",
                  " (",
                  "handle",
                  ")",
                ],
                "type": "h1",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "this is the summary",
                  "className": "summary",
                },
                "ref": null,
                "rendered": "this is the summary",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": "pre",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <Unknown
                      queueItem={
                                            Object {
                                                                  "children": Array [],
                                                                  "coreState": "Draft",
                                                                  "form": Object {
                                                                    "name": "test form",
                                                                  },
                                                                  "handle": "handle",
                                                                  "id": "id",
                                                                  "values": Object {
                                                                    "Summary": "this is the summary",
                                                                  },
                                                                }
                      }
                      readOnly={false}
                      toggle={[Function]}
/>,
                    false,
                    <Connect(withProps(withHandlers(Component)))
                      className="btn btn-primary wally-button"
                      onGrabbed={undefined}
                      onWorked={undefined}
                      queueItem={
                                            Object {
                                                                  "children": Array [],
                                                                  "coreState": "Draft",
                                                                  "form": Object {
                                                                    "name": "test form",
                                                                  },
                                                                  "handle": "handle",
                                                                  "id": "id",
                                                                  "values": Object {
                                                                    "Summary": "this is the summary",
                                                                  },
                                                                }
                      }
/>,
                  ],
                  "className": "actions",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "queueItem": Object {
                        "children": Array [],
                        "coreState": "Draft",
                        "form": Object {
                          "name": "test form",
                        },
                        "handle": "handle",
                        "id": "id",
                        "values": Object {
                          "Summary": "this is the summary",
                        },
                      },
                      "readOnly": false,
                      "toggle": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  false,
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": "btn btn-primary wally-button",
                      "onGrabbed": undefined,
                      "onWorked": undefined,
                      "queueItem": Object {
                        "children": Array [],
                        "coreState": "Draft",
                        "form": Object {
                          "name": "test form",
                        },
                        "handle": "handle",
                        "id": "id",
                        "values": Object {
                          "Summary": "this is the summary",
                        },
                      },
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              undefined,
              undefined,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <li
                      className="list-group-item timestamp"
>
                      <span
                                            className="label"
                      >
                                            Due
                      </span>
                      <span
                                            className="value"
                      >
                                            <TimeAgo
                                                                  id="due-date"
                                                                  timestamp={undefined}
                                            />
                      </span>
</li>,
                    <li
                      className="list-group-item timestamp"
>
                      <span
                                            className="label"
                      >
                                            Updated
                      </span>
                      <span
                                            className="value"
                      >
                                            <TimeAgo
                                                                  id="updated-at"
                                                                  timestamp={undefined}
                                            />
                      </span>
</li>,
                    <li
                      className="list-group-item timestamp"
>
                      <span
                                            className="label"
                      >
                                            Created
                      </span>
                      <span
                                            className="value"
                      >
                                            <TimeAgo
                                                                  id="created-at"
                                                                  timestamp={undefined}
                                            />
                      </span>
</li>,
                  ],
                  "className": "list-group timestamps",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <span
                          className="label"
>
                          Due
</span>,
                        <span
                          className="value"
>
                          <TimeAgo
                                                    id="due-date"
                                                    timestamp={undefined}
                          />
</span>,
                      ],
                      "className": "list-group-item timestamp",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Due",
                          "className": "label",
                        },
                        "ref": null,
                        "rendered": "Due",
                        "type": "span",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <TimeAgo
                            id="due-date"
                            timestamp={undefined}
/>,
                          "className": "value",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "id": "due-date",
                            "timestamp": undefined,
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        "type": "span",
                      },
                    ],
                    "type": "li",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <span
                          className="label"
>
                          Updated
</span>,
                        <span
                          className="value"
>
                          <TimeAgo
                                                    id="updated-at"
                                                    timestamp={undefined}
                          />
</span>,
                      ],
                      "className": "list-group-item timestamp",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Updated",
                          "className": "label",
                        },
                        "ref": null,
                        "rendered": "Updated",
                        "type": "span",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <TimeAgo
                            id="updated-at"
                            timestamp={undefined}
/>,
                          "className": "value",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "id": "updated-at",
                            "timestamp": undefined,
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        "type": "span",
                      },
                    ],
                    "type": "li",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <span
                          className="label"
>
                          Created
</span>,
                        <span
                          className="value"
>
                          <TimeAgo
                                                    id="created-at"
                                                    timestamp={undefined}
                          />
</span>,
                      ],
                      "className": "list-group-item timestamp",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Created",
                          "className": "label",
                        },
                        "ref": null,
                        "rendered": "Created",
                        "type": "span",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <TimeAgo
                            id="created-at"
                            timestamp={undefined}
/>,
                          "className": "value",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "id": "created-at",
                            "timestamp": undefined,
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        "type": "span",
                      },
                    ],
                    "type": "li",
                  },
                ],
                "type": "ul",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h2
                  className="section__title"
>
                  Subtasks
                  <button
                                    className="btn btn-link"
                                    onClick={[Function]}
                  >
                                    <span
                                                      className="fa fa-plus"
                                    />
                  </button>
</h2>,
                false,
                <div
                  className="empty-subtasks"
>
                  <h5>
                                    No Subtasks to display
                  </h5>
                  <h6>
                                    Subtasks are an easy way to create smaller and/or related tasks to parent task.
                  </h6>
</div>,
              ],
              "className": "subtasks-section",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Subtasks",
                    <button
                      className="btn btn-link"
                      onClick={[Function]}
>
                      <span
                                            className="fa fa-plus"
                      />
</button>,
                  ],
                  "className": "section__title",
                },
                "ref": null,
                "rendered": Array [
                  "Subtasks",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <span
                        className="fa fa-plus"
/>,
                      "className": "btn btn-link",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "className": "fa fa-plus",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "span",
                    },
                    "type": "button",
                  },
                ],
                "type": "h2",
              },
              false,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <h5>
                      No Subtasks to display
</h5>,
                    <h6>
                      Subtasks are an easy way to create smaller and/or related tasks to parent task.
</h6>,
                  ],
                  "className": "empty-subtasks",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "No Subtasks to display",
                    },
                    "ref": null,
                    "rendered": "No Subtasks to display",
                    "type": "h5",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Subtasks are an easy way to create smaller and/or related tasks to parent task.",
                    },
                    "ref": null,
                    "rendered": "Subtasks are an easy way to create smaller and/or related tasks to parent task.",
                    "type": "h6",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
