// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Table /> render dataSource dataSource resolves 1`] = `
<KineticLib>
  <Provider
    context={
      Object {
        "$$typeof": Symbol(react.context),
        "Consumer": Object {
          "$$typeof": Symbol(react.context),
          "_calculateChangedBits": null,
          "_context": [Circular],
        },
        "Provider": Object {
          "$$typeof": Symbol(react.provider),
          "_context": [Circular],
        },
        "_calculateChangedBits": null,
        "_currentRenderer": Object {},
        "_currentRenderer2": null,
        "_currentValue": undefined,
        "_currentValue2": undefined,
        "_threadCount": 0,
      }
    }
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(Symbol.observable): [Function],
      }
    }
  >
    <I18nProvider>
      <Component
        tableKey="mock-table-key"
        uncontrolled={true}
      >
        <Table
          addColumns={Array []}
          alterColumns={Object {}}
          columns={Array []}
          components={
            Object {
              "FilterForm": undefined,
            }
          }
          dataSource={[Function]}
          includeFooter={false}
          omitHeader={false}
          pageSize={25}
          rows={Immutable.List []}
          sortable={true}
          tableKey="mock-table-key"
          tableOptions={Object {}}
          uncontrolled={true}
        >
          <Connect(lifecycle(TableComponent))
            addColumns={Array []}
            alterColumns={Object {}}
            auto={true}
            columnComponents={Immutable.Map {}}
            columnSet={Immutable.List []}
            columns={Immutable.List []}
            components={
              Object {
                "AttributesField": [Function],
                "Body": [Function],
                "BodyCell": [Function],
                "BodyRow": [Function],
                "BooleanFilter": [Function],
                "CheckboxField": [Function],
                "CodeField": [Function],
                "EmptyBodyRow": [Function],
                "FilterForm": undefined,
                "FilterLayout": [Function],
                "Footer": [Function],
                "FooterCell": [Function],
                "FooterRow": [Function],
                "FormButtons": [Function],
                "FormError": [Function],
                "FormField": [Function],
                "FormLayout": [Function],
                "FormMultiField": [Function],
                "Header": [Function],
                "HeaderCell": [Function],
                "HeaderRow": [Function],
                "PaginationControl": [Function],
                "PasswordField": [Function],
                "RadioField": [Function],
                "SelectField": [Function],
                "SelectMultiField": [Function],
                "TableField": [Function],
                "TableLayout": [Function],
                "TeamField": [Function],
                "TeamMultiField": [Function],
                "TextField": [Function],
                "TextFilter": [Function],
                "TextMultiField": [Function],
                "UserField": [Function],
                "UserMultiField": [Function],
              }
            }
            dataSource={[Function]}
            includeFooter={false}
            omitHeader={false}
            pageSize={25}
            rows={Immutable.List []}
            sortable={true}
            tableKey="mock-table-key"
            tableOptions={Object {}}
            uncontrolled={true}
          >
            <lifecycle(TableComponent)
              addColumns={Array []}
              alterColumns={Object {}}
              appliedFilters={Immutable.Map {}}
              auto={true}
              columnComponents={Immutable.Map {}}
              columnSet={Immutable.List []}
              columns={Immutable.List []}
              components={
                Object {
                  "AttributesField": [Function],
                  "Body": [Function],
                  "BodyCell": [Function],
                  "BodyRow": [Function],
                  "BooleanFilter": [Function],
                  "CheckboxField": [Function],
                  "CodeField": [Function],
                  "EmptyBodyRow": [Function],
                  "FilterForm": undefined,
                  "FilterLayout": [Function],
                  "Footer": [Function],
                  "FooterCell": [Function],
                  "FooterRow": [Function],
                  "FormButtons": [Function],
                  "FormError": [Function],
                  "FormField": [Function],
                  "FormLayout": [Function],
                  "FormMultiField": [Function],
                  "Header": [Function],
                  "HeaderCell": [Function],
                  "HeaderRow": [Function],
                  "PaginationControl": [Function],
                  "PasswordField": [Function],
                  "RadioField": [Function],
                  "SelectField": [Function],
                  "SelectMultiField": [Function],
                  "TableField": [Function],
                  "TableLayout": [Function],
                  "TeamField": [Function],
                  "TeamMultiField": [Function],
                  "TextField": [Function],
                  "TextFilter": [Function],
                  "TextMultiField": [Function],
                  "UserField": [Function],
                  "UserMultiField": [Function],
                }
              }
              configured={true}
              data={
                Immutable.List [
                  Immutable.Map {
                    "name": "test",
                    "status": "active",
                  },
                ]
              }
              dataSource={[Function]}
              dispatch={[Function]}
              error={null}
              filters={Immutable.Map {}}
              includeFooter={false}
              initialize={true}
              initializing={false}
              loading={false}
              mounted={true}
              nextPageToken={null}
              omitHeader={false}
              pageOffset={0}
              pageSize={25}
              pageTokens={Immutable.List []}
              rows={
                Immutable.List [
                  Immutable.Map {
                    "name": "test",
                    "status": "active",
                  },
                ]
              }
              sortColumn={null}
              sortDirection="desc"
              sortable={true}
              tableKey="mock-table-key"
              tableOptions={Object {}}
              uncontrolled={true}
              validFilters={true}
            >
              <TableComponent
                addColumns={Array []}
                alterColumns={Object {}}
                appliedFilters={Immutable.Map {}}
                auto={true}
                columnComponents={Immutable.Map {}}
                columnSet={Immutable.List []}
                columns={Immutable.List []}
                components={
                  Object {
                    "AttributesField": [Function],
                    "Body": [Function],
                    "BodyCell": [Function],
                    "BodyRow": [Function],
                    "BooleanFilter": [Function],
                    "CheckboxField": [Function],
                    "CodeField": [Function],
                    "EmptyBodyRow": [Function],
                    "FilterForm": undefined,
                    "FilterLayout": [Function],
                    "Footer": [Function],
                    "FooterCell": [Function],
                    "FooterRow": [Function],
                    "FormButtons": [Function],
                    "FormError": [Function],
                    "FormField": [Function],
                    "FormLayout": [Function],
                    "FormMultiField": [Function],
                    "Header": [Function],
                    "HeaderCell": [Function],
                    "HeaderRow": [Function],
                    "PaginationControl": [Function],
                    "PasswordField": [Function],
                    "RadioField": [Function],
                    "SelectField": [Function],
                    "SelectMultiField": [Function],
                    "TableField": [Function],
                    "TableLayout": [Function],
                    "TeamField": [Function],
                    "TeamMultiField": [Function],
                    "TextField": [Function],
                    "TextFilter": [Function],
                    "TextMultiField": [Function],
                    "UserField": [Function],
                    "UserMultiField": [Function],
                  }
                }
                configured={true}
                data={
                  Immutable.List [
                    Immutable.Map {
                      "name": "test",
                      "status": "active",
                    },
                  ]
                }
                dataSource={[Function]}
                dispatch={[Function]}
                error={null}
                filters={Immutable.Map {}}
                includeFooter={false}
                initialize={true}
                initializing={false}
                loading={false}
                mounted={true}
                nextPageToken={null}
                omitHeader={false}
                pageOffset={0}
                pageSize={25}
                pageTokens={Immutable.List []}
                rows={
                  Immutable.List [
                    Immutable.Map {
                      "name": "test",
                      "status": "active",
                    },
                  ]
                }
                sortColumn={null}
                sortDirection="desc"
                sortable={true}
                tableKey="mock-table-key"
                tableOptions={Object {}}
                uncontrolled={true}
                validFilters={true}
              >
                <TableViewMock
                  appliedFilters={Immutable.Map {}}
                  error={null}
                  filter={
                    <FilterLayout
                      appliedFilters={Immutable.Map {}}
                      columnSet={Immutable.List []}
                      filters={Immutable.Map {}}
                      initializing={false}
                      loading={false}
                      onChangeFilter={[Function]}
                      onClear={[Function]}
                      onReset={[Function]}
                      onSearch={[Function]}
                      tableKey="mock-table-key"
                      tableOptions={Object {}}
                      validFilters={true}
                    />
                  }
                  initializing={false}
                  loading={false}
                  pagination={
                    <PaginationControl
                      endIndex={1}
                      loading={false}
                      nextPage={null}
                      prevPage={null}
                      startIndex={1}
                    />
                  }
                  rows={
                    Immutable.List [
                      Immutable.Map {
                        "name": "test",
                        "status": "active",
                      },
                    ]
                  }
                  table={
                    <TableLayout
                      body={
                        <TableBody
                          empty={false}
                          error={null}
                          initializing={false}
                          loading={false}
                          tableOptions={Object {}}
                          tableRows={
                            Immutable.List [
                              <KeyWrapper>
                                <BodyRow
                                  cells={Immutable.List []}
                                  columns={Immutable.List []}
                                  index={0}
                                  row={
                                    Immutable.Map {
                                      "name": "test",
                                      "status": "active",
                                    }
                                  }
                                  tableOptions={Object {}}
                                />
                              </KeyWrapper>,
                            ]
                          }
                        />
                      }
                      empty={false}
                      error={null}
                      footer={null}
                      header={
                        <Header
                          headerRow={
                            <HeaderRow
                              columnHeaders={Immutable.List []}
                              rows={
                                Immutable.List [
                                  Immutable.Map {
                                    "name": "test",
                                    "status": "active",
                                  },
                                ]
                              }
                              tableOptions={Object {}}
                            />
                          }
                          rows={
                            Immutable.List [
                              Immutable.Map {
                                "name": "test",
                                "status": "active",
                              },
                            ]
                          }
                          sortable={true}
                          tableOptions={Object {}}
                        />
                      }
                      initializing={false}
                      loading={false}
                      tableOptions={Object {}}
                    />
                  }
                >
                  <TableLayout
                    body={
                      <TableBody
                        empty={false}
                        error={null}
                        initializing={false}
                        loading={false}
                        tableOptions={Object {}}
                        tableRows={
                          Immutable.List [
                            <KeyWrapper>
                              <BodyRow
                                cells={Immutable.List []}
                                columns={Immutable.List []}
                                index={0}
                                row={
                                  Immutable.Map {
                                    "name": "test",
                                    "status": "active",
                                  }
                                }
                                tableOptions={Object {}}
                              />
                            </KeyWrapper>,
                          ]
                        }
                      />
                    }
                    empty={false}
                    error={null}
                    footer={null}
                    header={
                      <Header
                        headerRow={
                          <HeaderRow
                            columnHeaders={Immutable.List []}
                            rows={
                              Immutable.List [
                                Immutable.Map {
                                  "name": "test",
                                  "status": "active",
                                },
                              ]
                            }
                            tableOptions={Object {}}
                          />
                        }
                        rows={
                          Immutable.List [
                            Immutable.Map {
                              "name": "test",
                              "status": "active",
                            },
                          ]
                        }
                        sortable={true}
                        tableOptions={Object {}}
                      />
                    }
                    initializing={false}
                    loading={false}
                    tableOptions={Object {}}
                  >
                    <table>
                      <Header
                        headerRow={
                          <HeaderRow
                            columnHeaders={Immutable.List []}
                            rows={
                              Immutable.List [
                                Immutable.Map {
                                  "name": "test",
                                  "status": "active",
                                },
                              ]
                            }
                            tableOptions={Object {}}
                          />
                        }
                        rows={
                          Immutable.List [
                            Immutable.Map {
                              "name": "test",
                              "status": "active",
                            },
                          ]
                        }
                        sortable={true}
                        tableOptions={Object {}}
                      >
                        <thead>
                          <HeaderRow
                            columnHeaders={Immutable.List []}
                            rows={
                              Immutable.List [
                                Immutable.Map {
                                  "name": "test",
                                  "status": "active",
                                },
                              ]
                            }
                            tableOptions={Object {}}
                          >
                            <tr>
                              <Component />
                            </tr>
                          </HeaderRow>
                        </thead>
                      </Header>
                      <TableBody
                        empty={false}
                        error={null}
                        initializing={false}
                        loading={false}
                        tableOptions={Object {}}
                        tableRows={
                          Immutable.List [
                            <KeyWrapper>
                              <BodyRow
                                cells={Immutable.List []}
                                columns={Immutable.List []}
                                index={0}
                                row={
                                  Immutable.Map {
                                    "name": "test",
                                    "status": "active",
                                  }
                                }
                                tableOptions={Object {}}
                              />
                            </KeyWrapper>,
                          ]
                        }
                      >
                        <tbody>
                          <KeyWrapper
                            key="row-0"
                          >
                            <BodyRow
                              cells={Immutable.List []}
                              columns={Immutable.List []}
                              index={0}
                              row={
                                Immutable.Map {
                                  "name": "test",
                                  "status": "active",
                                }
                              }
                              tableOptions={Object {}}
                            >
                              <tr>
                                <Component />
                              </tr>
                            </BodyRow>
                          </KeyWrapper>
                        </tbody>
                      </TableBody>
                    </table>
                  </TableLayout>
                  <PaginationControl
                    endIndex={1}
                    loading={false}
                    nextPage={null}
                    prevPage={null}
                    startIndex={1}
                  >
                    <div>
                      <button
                        disabled={true}
                        onClick={null}
                      >
                        <I18n>
                          <I18nTranslate
                            context="shared"
                            loadTranslations={[Function]}
                            locale="en"
                            translations={Immutable.Map {}}
                          />
                        </I18n>
                      </button>
                      <button
                        disabled={true}
                        onClick={null}
                      >
                        <I18n>
                          <I18nTranslate
                            context="shared"
                            loadTranslations={[Function]}
                            locale="en"
                            translations={Immutable.Map {}}
                          />
                        </I18n>
                      </button>
                    </div>
                  </PaginationControl>
                  <FilterLayout
                    appliedFilters={Immutable.Map {}}
                    columnSet={Immutable.List []}
                    filters={Immutable.Map {}}
                    initializing={false}
                    loading={false}
                    onChangeFilter={[Function]}
                    onClear={[Function]}
                    onReset={[Function]}
                    onSearch={[Function]}
                    tableKey="mock-table-key"
                    tableOptions={Object {}}
                    validFilters={true}
                  >
                    <form
                      onSubmit={[Function]}
                    >
                      <button
                        type="submit"
                      >
                        Search
                      </button>
                    </form>
                  </FilterLayout>
                </TableViewMock>
              </TableComponent>
            </lifecycle(TableComponent)>
          </Connect(lifecycle(TableComponent))>
        </Table>
      </Component>
    </I18nProvider>
  </Provider>
</KineticLib>
`;

exports[`<Table /> render dataSource dataSource resolves 2`] = `
Array [
  Array [],
]
`;

exports[`<Table /> render filters filter form 1`] = `null`;

exports[`<Table /> render filters filter form 2`] = `
<KineticLib>
  <Provider
    context={
      Object {
        "$$typeof": Symbol(react.context),
        "Consumer": Object {
          "$$typeof": Symbol(react.context),
          "_calculateChangedBits": null,
          "_context": [Circular],
        },
        "Provider": Object {
          "$$typeof": Symbol(react.provider),
          "_context": [Circular],
        },
        "_calculateChangedBits": null,
        "_currentRenderer": Object {},
        "_currentRenderer2": null,
        "_currentValue": undefined,
        "_currentValue2": undefined,
        "_threadCount": 0,
      }
    }
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(Symbol.observable): [Function],
      }
    }
  >
    <I18nProvider>
      <Component
        tableKey="mock-table-key"
        uncontrolled={true}
      >
        <Table
          addColumns={Array []}
          alterColumns={Object {}}
          columns={Array []}
          components={
            Object {
              "FilterForm": [Function],
            }
          }
          dataSource={[Function]}
          includeFooter={false}
          omitHeader={false}
          pageSize={25}
          rows={Immutable.List []}
          sortable={true}
          tableKey="mock-table-key"
          tableOptions={Object {}}
          uncontrolled={true}
        >
          <Connect(lifecycle(TableComponent))
            addColumns={Array []}
            alterColumns={Object {}}
            auto={true}
            columnComponents={Immutable.Map {}}
            columnSet={Immutable.List []}
            columns={Immutable.List []}
            components={
              Object {
                "AttributesField": [Function],
                "Body": [Function],
                "BodyCell": [Function],
                "BodyRow": [Function],
                "BooleanFilter": [Function],
                "CheckboxField": [Function],
                "CodeField": [Function],
                "EmptyBodyRow": [Function],
                "FilterForm": [Function],
                "FilterLayout": [Function],
                "Footer": [Function],
                "FooterCell": [Function],
                "FooterRow": [Function],
                "FormButtons": [Function],
                "FormError": [Function],
                "FormField": [Function],
                "FormLayout": [Function],
                "FormMultiField": [Function],
                "Header": [Function],
                "HeaderCell": [Function],
                "HeaderRow": [Function],
                "PaginationControl": [Function],
                "PasswordField": [Function],
                "RadioField": [Function],
                "SelectField": [Function],
                "SelectMultiField": [Function],
                "TableField": [Function],
                "TableLayout": [Function],
                "TeamField": [Function],
                "TeamMultiField": [Function],
                "TextField": [Function],
                "TextFilter": [Function],
                "TextMultiField": [Function],
                "UserField": [Function],
                "UserMultiField": [Function],
              }
            }
            dataSource={[Function]}
            includeFooter={false}
            omitHeader={false}
            pageSize={25}
            rows={Immutable.List []}
            sortable={true}
            tableKey="mock-table-key"
            tableOptions={Object {}}
            uncontrolled={true}
          >
            <lifecycle(TableComponent)
              addColumns={Array []}
              alterColumns={Object {}}
              appliedFilters={Immutable.Map {}}
              auto={true}
              columnComponents={Immutable.Map {}}
              columnSet={Immutable.List []}
              columns={Immutable.List []}
              components={
                Object {
                  "AttributesField": [Function],
                  "Body": [Function],
                  "BodyCell": [Function],
                  "BodyRow": [Function],
                  "BooleanFilter": [Function],
                  "CheckboxField": [Function],
                  "CodeField": [Function],
                  "EmptyBodyRow": [Function],
                  "FilterForm": [Function],
                  "FilterLayout": [Function],
                  "Footer": [Function],
                  "FooterCell": [Function],
                  "FooterRow": [Function],
                  "FormButtons": [Function],
                  "FormError": [Function],
                  "FormField": [Function],
                  "FormLayout": [Function],
                  "FormMultiField": [Function],
                  "Header": [Function],
                  "HeaderCell": [Function],
                  "HeaderRow": [Function],
                  "PaginationControl": [Function],
                  "PasswordField": [Function],
                  "RadioField": [Function],
                  "SelectField": [Function],
                  "SelectMultiField": [Function],
                  "TableField": [Function],
                  "TableLayout": [Function],
                  "TeamField": [Function],
                  "TeamMultiField": [Function],
                  "TextField": [Function],
                  "TextFilter": [Function],
                  "TextMultiField": [Function],
                  "UserField": [Function],
                  "UserMultiField": [Function],
                }
              }
              configured={true}
              data={
                Immutable.List [
                  Immutable.Map {
                    "name": "test",
                    "status": "active",
                  },
                ]
              }
              dataSource={[Function]}
              dispatch={[Function]}
              error={null}
              filters={Immutable.Map {}}
              includeFooter={false}
              initialize={true}
              initializing={false}
              loading={false}
              mounted={true}
              nextPageToken={null}
              omitHeader={false}
              pageOffset={0}
              pageSize={25}
              pageTokens={Immutable.List []}
              rows={
                Immutable.List [
                  Immutable.Map {
                    "name": "test",
                    "status": "active",
                  },
                ]
              }
              sortColumn={null}
              sortDirection="desc"
              sortable={true}
              tableKey="mock-table-key"
              tableOptions={Object {}}
              uncontrolled={true}
              validFilters={true}
            >
              <TableComponent
                addColumns={Array []}
                alterColumns={Object {}}
                appliedFilters={Immutable.Map {}}
                auto={true}
                columnComponents={Immutable.Map {}}
                columnSet={Immutable.List []}
                columns={Immutable.List []}
                components={
                  Object {
                    "AttributesField": [Function],
                    "Body": [Function],
                    "BodyCell": [Function],
                    "BodyRow": [Function],
                    "BooleanFilter": [Function],
                    "CheckboxField": [Function],
                    "CodeField": [Function],
                    "EmptyBodyRow": [Function],
                    "FilterForm": [Function],
                    "FilterLayout": [Function],
                    "Footer": [Function],
                    "FooterCell": [Function],
                    "FooterRow": [Function],
                    "FormButtons": [Function],
                    "FormError": [Function],
                    "FormField": [Function],
                    "FormLayout": [Function],
                    "FormMultiField": [Function],
                    "Header": [Function],
                    "HeaderCell": [Function],
                    "HeaderRow": [Function],
                    "PaginationControl": [Function],
                    "PasswordField": [Function],
                    "RadioField": [Function],
                    "SelectField": [Function],
                    "SelectMultiField": [Function],
                    "TableField": [Function],
                    "TableLayout": [Function],
                    "TeamField": [Function],
                    "TeamMultiField": [Function],
                    "TextField": [Function],
                    "TextFilter": [Function],
                    "TextMultiField": [Function],
                    "UserField": [Function],
                    "UserMultiField": [Function],
                  }
                }
                configured={true}
                data={
                  Immutable.List [
                    Immutable.Map {
                      "name": "test",
                      "status": "active",
                    },
                  ]
                }
                dataSource={[Function]}
                dispatch={[Function]}
                error={null}
                filters={Immutable.Map {}}
                includeFooter={false}
                initialize={true}
                initializing={false}
                loading={false}
                mounted={true}
                nextPageToken={null}
                omitHeader={false}
                pageOffset={0}
                pageSize={25}
                pageTokens={Immutable.List []}
                rows={
                  Immutable.List [
                    Immutable.Map {
                      "name": "test",
                      "status": "active",
                    },
                  ]
                }
                sortColumn={null}
                sortDirection="desc"
                sortable={true}
                tableKey="mock-table-key"
                tableOptions={Object {}}
                uncontrolled={true}
                validFilters={true}
              >
                <TableViewMock
                  appliedFilters={Immutable.Map {}}
                  error={null}
                  filter={<Unknown />}
                  initializing={false}
                  loading={false}
                  pagination={
                    <PaginationControl
                      endIndex={1}
                      loading={false}
                      nextPage={null}
                      prevPage={null}
                      startIndex={1}
                    />
                  }
                  rows={
                    Immutable.List [
                      Immutable.Map {
                        "name": "test",
                        "status": "active",
                      },
                    ]
                  }
                  table={
                    <TableLayout
                      body={
                        <TableBody
                          empty={false}
                          error={null}
                          initializing={false}
                          loading={false}
                          tableOptions={Object {}}
                          tableRows={
                            Immutable.List [
                              <KeyWrapper>
                                <BodyRow
                                  cells={Immutable.List []}
                                  columns={Immutable.List []}
                                  index={0}
                                  row={
                                    Immutable.Map {
                                      "name": "test",
                                      "status": "active",
                                    }
                                  }
                                  tableOptions={Object {}}
                                />
                              </KeyWrapper>,
                            ]
                          }
                        />
                      }
                      empty={false}
                      error={null}
                      footer={null}
                      header={
                        <Header
                          headerRow={
                            <HeaderRow
                              columnHeaders={Immutable.List []}
                              rows={
                                Immutable.List [
                                  Immutable.Map {
                                    "name": "test",
                                    "status": "active",
                                  },
                                ]
                              }
                              tableOptions={Object {}}
                            />
                          }
                          rows={
                            Immutable.List [
                              Immutable.Map {
                                "name": "test",
                                "status": "active",
                              },
                            ]
                          }
                          sortable={true}
                          tableOptions={Object {}}
                        />
                      }
                      initializing={false}
                      loading={false}
                      tableOptions={Object {}}
                    />
                  }
                >
                  <TableLayout
                    body={
                      <TableBody
                        empty={false}
                        error={null}
                        initializing={false}
                        loading={false}
                        tableOptions={Object {}}
                        tableRows={
                          Immutable.List [
                            <KeyWrapper>
                              <BodyRow
                                cells={Immutable.List []}
                                columns={Immutable.List []}
                                index={0}
                                row={
                                  Immutable.Map {
                                    "name": "test",
                                    "status": "active",
                                  }
                                }
                                tableOptions={Object {}}
                              />
                            </KeyWrapper>,
                          ]
                        }
                      />
                    }
                    empty={false}
                    error={null}
                    footer={null}
                    header={
                      <Header
                        headerRow={
                          <HeaderRow
                            columnHeaders={Immutable.List []}
                            rows={
                              Immutable.List [
                                Immutable.Map {
                                  "name": "test",
                                  "status": "active",
                                },
                              ]
                            }
                            tableOptions={Object {}}
                          />
                        }
                        rows={
                          Immutable.List [
                            Immutable.Map {
                              "name": "test",
                              "status": "active",
                            },
                          ]
                        }
                        sortable={true}
                        tableOptions={Object {}}
                      />
                    }
                    initializing={false}
                    loading={false}
                    tableOptions={Object {}}
                  >
                    <table>
                      <Header
                        headerRow={
                          <HeaderRow
                            columnHeaders={Immutable.List []}
                            rows={
                              Immutable.List [
                                Immutable.Map {
                                  "name": "test",
                                  "status": "active",
                                },
                              ]
                            }
                            tableOptions={Object {}}
                          />
                        }
                        rows={
                          Immutable.List [
                            Immutable.Map {
                              "name": "test",
                              "status": "active",
                            },
                          ]
                        }
                        sortable={true}
                        tableOptions={Object {}}
                      >
                        <thead>
                          <HeaderRow
                            columnHeaders={Immutable.List []}
                            rows={
                              Immutable.List [
                                Immutable.Map {
                                  "name": "test",
                                  "status": "active",
                                },
                              ]
                            }
                            tableOptions={Object {}}
                          >
                            <tr>
                              <Component />
                            </tr>
                          </HeaderRow>
                        </thead>
                      </Header>
                      <TableBody
                        empty={false}
                        error={null}
                        initializing={false}
                        loading={false}
                        tableOptions={Object {}}
                        tableRows={
                          Immutable.List [
                            <KeyWrapper>
                              <BodyRow
                                cells={Immutable.List []}
                                columns={Immutable.List []}
                                index={0}
                                row={
                                  Immutable.Map {
                                    "name": "test",
                                    "status": "active",
                                  }
                                }
                                tableOptions={Object {}}
                              />
                            </KeyWrapper>,
                          ]
                        }
                      >
                        <tbody>
                          <KeyWrapper
                            key="row-0"
                          >
                            <BodyRow
                              cells={Immutable.List []}
                              columns={Immutable.List []}
                              index={0}
                              row={
                                Immutable.Map {
                                  "name": "test",
                                  "status": "active",
                                }
                              }
                              tableOptions={Object {}}
                            >
                              <tr>
                                <Component />
                              </tr>
                            </BodyRow>
                          </KeyWrapper>
                        </tbody>
                      </TableBody>
                    </table>
                  </TableLayout>
                  <PaginationControl
                    endIndex={1}
                    loading={false}
                    nextPage={null}
                    prevPage={null}
                    startIndex={1}
                  >
                    <div>
                      <button
                        disabled={true}
                        onClick={null}
                      >
                        <I18n>
                          <I18nTranslate
                            context="shared"
                            loadTranslations={[Function]}
                            locale="en"
                            translations={Immutable.Map {}}
                          />
                        </I18n>
                      </button>
                      <button
                        disabled={true}
                        onClick={null}
                      >
                        <I18n>
                          <I18nTranslate
                            context="shared"
                            loadTranslations={[Function]}
                            locale="en"
                            translations={Immutable.Map {}}
                          />
                        </I18n>
                      </button>
                    </div>
                  </PaginationControl>
                  <Component>
                    <Form
                      dataSources={[Function]}
                      fields={[Function]}
                      formOptions={Object {}}
                      onSubmit={[Function]}
                    >
                      <Connect(FormImplComponent)
                        components={
                          Immutable.Map {
                            "BooleanFilter": [Function],
                            "FilterLayout": [Function],
                            "Body": [Function],
                            "PaginationControl": [Function],
                            "AttributesField": [Function],
                            "BodyCell": [Function],
                            "FormError": [Function],
                            "TextFilter": [Function],
                            "FormMultiField": [Function],
                            "EmptyBodyRow": [Function],
                            "UserMultiField": [Function],
                            "TableField": [Function],
                            "Header": [Function],
                            "CodeField": [Function],
                            "TextField": [Function],
                            "HeaderRow": [Function],
                            "TextMultiField": [Function],
                            "FormLayout": [Function],
                            "HeaderCell": [Function],
                            "UserField": [Function],
                            "FormField": [Function],
                            "CheckboxField": [Function],
                            "TableLayout": [Function],
                            "BodyRow": [Function],
                            "Footer": [Function],
                            "TeamField": [Function],
                            "SelectMultiField": [Function],
                            "FooterCell": [Function],
                            "FormButtons": [Function],
                            "SelectField": [Function],
                            "TeamMultiField": [Function],
                            "RadioField": [Function],
                            "FooterRow": [Function],
                            "PasswordField": [Function],
                          }
                        }
                        dataSources={[Function]}
                        fields={[Function]}
                        formKey="fA2BD3A"
                        formOptions={Object {}}
                        onSubmit={[Function]}
                      >
                        <FormImplComponent
                          components={
                            Immutable.Map {
                              "BooleanFilter": [Function],
                              "FilterLayout": [Function],
                              "Body": [Function],
                              "PaginationControl": [Function],
                              "AttributesField": [Function],
                              "BodyCell": [Function],
                              "FormError": [Function],
                              "TextFilter": [Function],
                              "FormMultiField": [Function],
                              "EmptyBodyRow": [Function],
                              "UserMultiField": [Function],
                              "TableField": [Function],
                              "Header": [Function],
                              "CodeField": [Function],
                              "TextField": [Function],
                              "HeaderRow": [Function],
                              "TextMultiField": [Function],
                              "FormLayout": [Function],
                              "HeaderCell": [Function],
                              "UserField": [Function],
                              "FormField": [Function],
                              "CheckboxField": [Function],
                              "TableLayout": [Function],
                              "BodyRow": [Function],
                              "Footer": [Function],
                              "TeamField": [Function],
                              "SelectMultiField": [Function],
                              "FooterCell": [Function],
                              "FormButtons": [Function],
                              "SelectField": [Function],
                              "TeamMultiField": [Function],
                              "RadioField": [Function],
                              "FooterRow": [Function],
                              "PasswordField": [Function],
                            }
                          }
                          dataSources={[Function]}
                          dispatch={[Function]}
                          fields={[Function]}
                          formKey="fA2BD3A"
                          formOptions={Object {}}
                          formState={
                            Immutable.Record {
                              "addFields": Immutable.List [],
                              "alterFields": Immutable.Map {},
                              "bindings": Object {
                                "values": Immutable.OrderedMap {
                                  "name": "",
                                  "status": "",
                                },
                              },
                              "dataSources": Immutable.Map {},
                              "error": null,
                              "fields": Immutable.OrderedMap {
                                "name": Immutable.Record {
                                  "constraint": null,
                                  "constraintMessage": "Invalid",
                                  "dirty": false,
                                  "enabled": true,
                                  "errors": Immutable.List [],
                                  "eventHandlers": Immutable.Map {
                                    "onBlur": [Function],
                                    "onChange": [Function],
                                    "onFocus": [Function],
                                  },
                                  "focused": false,
                                  "functions": Immutable.Map {
                                    "enabled": null,
                                    "label": null,
                                    "options": null,
                                    "placeholder": null,
                                    "required": null,
                                    "search": null,
                                    "transient": null,
                                    "visible": null,
                                  },
                                  "helpText": "",
                                  "id": "ZkEyQkQzQSBuYW1l",
                                  "initialValue": "",
                                  "label": "Name",
                                  "language": "",
                                  "name": "name",
                                  "onChange": null,
                                  "options": Immutable.List [],
                                  "pattern": null,
                                  "patternMessage": "Invalid format",
                                  "placeholder": "",
                                  "renderAttributes": Immutable.Map {},
                                  "required": false,
                                  "requiredMessage": "This field is required",
                                  "search": Immutable.Map {},
                                  "serialize": null,
                                  "touched": false,
                                  "transient": false,
                                  "type": "text",
                                  "valid": true,
                                  "value": "",
                                  "visible": true,
                                },
                                "status": Immutable.Record {
                                  "constraint": null,
                                  "constraintMessage": "Invalid",
                                  "dirty": false,
                                  "enabled": true,
                                  "errors": Immutable.List [],
                                  "eventHandlers": Immutable.Map {
                                    "onBlur": [Function],
                                    "onChange": [Function],
                                    "onFocus": [Function],
                                  },
                                  "focused": false,
                                  "functions": Immutable.Map {
                                    "enabled": null,
                                    "label": null,
                                    "options": null,
                                    "placeholder": null,
                                    "required": null,
                                    "search": null,
                                    "transient": null,
                                    "visible": null,
                                  },
                                  "helpText": "",
                                  "id": "ZkEyQkQzQSBzdGF0dXM",
                                  "initialValue": "",
                                  "label": "Status",
                                  "language": "",
                                  "name": "status",
                                  "onChange": null,
                                  "options": Immutable.List [],
                                  "pattern": null,
                                  "patternMessage": "Invalid format",
                                  "placeholder": "",
                                  "renderAttributes": Immutable.Map {},
                                  "required": false,
                                  "requiredMessage": "This field is required",
                                  "search": Immutable.Map {},
                                  "serialize": null,
                                  "touched": false,
                                  "transient": false,
                                  "type": "text",
                                  "valid": true,
                                  "value": "",
                                  "visible": true,
                                },
                              },
                              "fieldsFn": [Function],
                              "formKey": "fA2BD3A",
                              "formOptions": Object {},
                              "initialValuesFn": null,
                              "onError": null,
                              "onSave": null,
                              "onSubmit": [Function],
                              "submitting": false,
                            }
                          }
                          onSubmit={[Function]}
                        >
                          <FormLayout
                            bindings={
                              Object {
                                "values": Immutable.OrderedMap {
                                  "name": "",
                                  "status": "",
                                },
                              }
                            }
                            buttons={
                              <FormButtons
                                clearError={[Function]}
                                dirty={false}
                                error={null}
                                formOptions={Object {}}
                                reset={[Function]}
                                submit={[Function]}
                                submitting={false}
                              />
                            }
                            dirty={false}
                            error={null}
                            fields={
                              Immutable.OrderedMap {
                                "name": <TextField
                                  dirty={false}
                                  enabled={true}
                                  errors={Immutable.List []}
                                  focusRef={null}
                                  focused={false}
                                  helpText=""
                                  id="ZkEyQkQzQSBuYW1l"
                                  label="Name"
                                  name="name"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  options={Immutable.List []}
                                  placeholder=""
                                  renderAttributes={Immutable.Map {}}
                                  required={false}
                                  touched={false}
                                  value=""
                                  visible={true}
                                />,
                                "status": <TextField
                                  dirty={false}
                                  enabled={true}
                                  errors={Immutable.List []}
                                  focusRef={null}
                                  focused={false}
                                  helpText=""
                                  id="ZkEyQkQzQSBzdGF0dXM"
                                  label="Status"
                                  name="status"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  options={Immutable.List []}
                                  placeholder=""
                                  renderAttributes={Immutable.Map {}}
                                  required={false}
                                  touched={false}
                                  value=""
                                  visible={true}
                                />,
                              }
                            }
                            formOptions={Object {}}
                            meta={
                              Immutable.OrderedMap {
                                "name": Immutable.Map {
                                  "visible": true,
                                },
                                "status": Immutable.Map {
                                  "visible": true,
                                },
                              }
                            }
                          >
                            <form>
                              <TextField
                                dirty={false}
                                enabled={true}
                                errors={Immutable.List []}
                                focusRef={null}
                                focused={false}
                                helpText=""
                                id="ZkEyQkQzQSBuYW1l"
                                key="name"
                                label="Name"
                                name="name"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                options={Immutable.List []}
                                placeholder=""
                                renderAttributes={Immutable.Map {}}
                                required={false}
                                touched={false}
                                value=""
                                visible={true}
                              >
                                <div
                                  className="field"
                                >
                                  <label
                                    htmlFor="ZkEyQkQzQSBuYW1l"
                                  >
                                    Name
                                  </label>
                                  <input
                                    id="ZkEyQkQzQSBuYW1l"
                                    name="name"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    type="text"
                                    value=""
                                  />
                                </div>
                              </TextField>
                              <TextField
                                dirty={false}
                                enabled={true}
                                errors={Immutable.List []}
                                focusRef={null}
                                focused={false}
                                helpText=""
                                id="ZkEyQkQzQSBzdGF0dXM"
                                key="status"
                                label="Status"
                                name="status"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                options={Immutable.List []}
                                placeholder=""
                                renderAttributes={Immutable.Map {}}
                                required={false}
                                touched={false}
                                value=""
                                visible={true}
                              >
                                <div
                                  className="field"
                                >
                                  <label
                                    htmlFor="ZkEyQkQzQSBzdGF0dXM"
                                  >
                                    Status
                                  </label>
                                  <input
                                    id="ZkEyQkQzQSBzdGF0dXM"
                                    name="status"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    type="text"
                                    value=""
                                  />
                                </div>
                              </TextField>
                              <FormButtons
                                clearError={[Function]}
                                dirty={false}
                                error={null}
                                formOptions={Object {}}
                                reset={[Function]}
                                submit={[Function]}
                                submitting={false}
                              >
                                <div>
                                  <button
                                    disabled={true}
                                    onClick={[Function]}
                                    type="submit"
                                  >
                                    Submit
                                  </button>
                                </div>
                              </FormButtons>
                            </form>
                          </FormLayout>
                        </FormImplComponent>
                      </Connect(FormImplComponent)>
                    </Form>
                  </Component>
                </TableViewMock>
              </TableComponent>
            </lifecycle(TableComponent)>
          </Connect(lifecycle(TableComponent))>
        </Table>
      </Component>
    </I18nProvider>
  </Provider>
</KineticLib>
`;

exports[`<Table /> render filters legacy filters 1`] = `
<FilterLayout
  appliedFilters={Immutable.Map {}}
  columnSet={Immutable.List []}
  filters={Immutable.Map {}}
  initializing={false}
  loading={false}
  onChangeFilter={[Function]}
  onClear={[Function]}
  onReset={[Function]}
  onSearch={[Function]}
  tableKey="mock-table-key"
  tableOptions={Object {}}
  validFilters={true}
>
  <form
    onSubmit={[Function]}
  >
    <button
      type="submit"
    >
      Search
    </button>
  </form>
</FilterLayout>
`;

exports[`<Table /> render kitchen sink 1`] = `
<KineticLib>
  <Provider
    context={
      Object {
        "$$typeof": Symbol(react.context),
        "Consumer": Object {
          "$$typeof": Symbol(react.context),
          "_calculateChangedBits": null,
          "_context": [Circular],
        },
        "Provider": Object {
          "$$typeof": Symbol(react.provider),
          "_context": [Circular],
        },
        "_calculateChangedBits": null,
        "_currentRenderer": Object {},
        "_currentRenderer2": null,
        "_currentValue": undefined,
        "_currentValue2": undefined,
        "_threadCount": 0,
      }
    }
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(Symbol.observable): [Function],
      }
    }
  >
    <I18nProvider>
      <Component
        addColumns={
          Array [
            Object {
              "components": Object {
                "BodyCell": [Function],
              },
              "label": "Actions",
              "value": "_action",
            },
          ]
        }
        tableKey="mock-table-key"
        uncontrolled={true}
      >
        <Table
          addColumns={
            Array [
              Object {
                "components": Object {
                  "BodyCell": [Function],
                },
                "label": "Actions",
                "value": "_action",
              },
            ]
          }
          alterColumns={Object {}}
          columns={
            Array [
              Object {
                "filter": "startsWith",
                "label": "Name",
                "sortable": true,
                "type": "text",
                "value": "name",
              },
              Object {
                "filter": "equals",
                "label": "Status",
                "options": [Function],
                "sortable": true,
                "type": "text",
                "value": "status",
              },
            ]
          }
          components={
            Object {
              "FilterForm": undefined,
            }
          }
          dataSource={[Function]}
          includeFooter={false}
          omitHeader={false}
          pageSize={25}
          rows={Immutable.List []}
          sortable={true}
          tableKey="mock-table-key"
          tableOptions={Object {}}
          uncontrolled={true}
        >
          <Connect(lifecycle(TableComponent))
            addColumns={
              Array [
                Object {
                  "components": Object {
                    "BodyCell": [Function],
                  },
                  "label": "Actions",
                  "value": "_action",
                },
              ]
            }
            alterColumns={Object {}}
            auto={true}
            columnComponents={
              Immutable.Map {
                "_action": Object {
                  "BodyCell": [Function],
                },
              }
            }
            columnSet={
              Immutable.List [
                "_action",
                "name",
                "status",
              ]
            }
            columns={
              Immutable.List [
                Immutable.Map {
                  "value": "_action",
                  "label": "Actions",
                  "components": Object {
                    "BodyCell": [Function],
                  },
                },
                Immutable.Map {
                  "value": "name",
                  "label": "Name",
                  "sortable": true,
                  "filter": "startsWith",
                  "type": "text",
                },
                Immutable.Map {
                  "value": "status",
                  "label": "Status",
                  "sortable": true,
                  "filter": "equals",
                  "type": "text",
                  "options": [Function],
                },
              ]
            }
            components={
              Object {
                "AttributesField": [Function],
                "Body": [Function],
                "BodyCell": [Function],
                "BodyRow": [Function],
                "BooleanFilter": [Function],
                "CheckboxField": [Function],
                "CodeField": [Function],
                "EmptyBodyRow": [Function],
                "FilterForm": undefined,
                "FilterLayout": [Function],
                "Footer": [Function],
                "FooterCell": [Function],
                "FooterRow": [Function],
                "FormButtons": [Function],
                "FormError": [Function],
                "FormField": [Function],
                "FormLayout": [Function],
                "FormMultiField": [Function],
                "Header": [Function],
                "HeaderCell": [Function],
                "HeaderRow": [Function],
                "PaginationControl": [Function],
                "PasswordField": [Function],
                "RadioField": [Function],
                "SelectField": [Function],
                "SelectMultiField": [Function],
                "TableField": [Function],
                "TableLayout": [Function],
                "TeamField": [Function],
                "TeamMultiField": [Function],
                "TextField": [Function],
                "TextFilter": [Function],
                "TextMultiField": [Function],
                "UserField": [Function],
                "UserMultiField": [Function],
              }
            }
            dataSource={[Function]}
            includeFooter={false}
            omitHeader={false}
            pageSize={25}
            rows={Immutable.List []}
            sortable={true}
            tableKey="mock-table-key"
            tableOptions={Object {}}
            uncontrolled={true}
          >
            <lifecycle(TableComponent)
              addColumns={
                Array [
                  Object {
                    "components": Object {
                      "BodyCell": [Function],
                    },
                    "label": "Actions",
                    "value": "_action",
                  },
                ]
              }
              alterColumns={Object {}}
              appliedFilters={
                Immutable.Map {
                  "name": Immutable.Map {
                    "value": "",
                    "column": Immutable.Map {
                      "value": "name",
                      "label": "Name",
                      "sortable": true,
                      "filter": "startsWith",
                      "type": "text",
                    },
                  },
                  "status": Immutable.Map {
                    "value": "",
                    "column": Immutable.Map {
                      "value": "status",
                      "label": "Status",
                      "sortable": true,
                      "filter": "equals",
                      "type": "text",
                      "options": [Function],
                    },
                  },
                }
              }
              auto={true}
              columnComponents={
                Immutable.Map {
                  "_action": Object {
                    "BodyCell": [Function],
                  },
                }
              }
              columnSet={
                Immutable.List [
                  "_action",
                  "name",
                  "status",
                ]
              }
              columns={
                Immutable.List [
                  Immutable.Map {
                    "value": "_action",
                    "label": "Actions",
                    "components": Object {
                      "BodyCell": [Function],
                    },
                  },
                  Immutable.Map {
                    "value": "name",
                    "label": "Name",
                    "sortable": true,
                    "filter": "startsWith",
                    "type": "text",
                  },
                  Immutable.Map {
                    "value": "status",
                    "label": "Status",
                    "sortable": true,
                    "filter": "equals",
                    "type": "text",
                    "options": [Function],
                  },
                ]
              }
              components={
                Object {
                  "AttributesField": [Function],
                  "Body": [Function],
                  "BodyCell": [Function],
                  "BodyRow": [Function],
                  "BooleanFilter": [Function],
                  "CheckboxField": [Function],
                  "CodeField": [Function],
                  "EmptyBodyRow": [Function],
                  "FilterForm": undefined,
                  "FilterLayout": [Function],
                  "Footer": [Function],
                  "FooterCell": [Function],
                  "FooterRow": [Function],
                  "FormButtons": [Function],
                  "FormError": [Function],
                  "FormField": [Function],
                  "FormLayout": [Function],
                  "FormMultiField": [Function],
                  "Header": [Function],
                  "HeaderCell": [Function],
                  "HeaderRow": [Function],
                  "PaginationControl": [Function],
                  "PasswordField": [Function],
                  "RadioField": [Function],
                  "SelectField": [Function],
                  "SelectMultiField": [Function],
                  "TableField": [Function],
                  "TableLayout": [Function],
                  "TeamField": [Function],
                  "TeamMultiField": [Function],
                  "TextField": [Function],
                  "TextFilter": [Function],
                  "TextMultiField": [Function],
                  "UserField": [Function],
                  "UserMultiField": [Function],
                }
              }
              configured={true}
              data={
                Immutable.List [
                  Immutable.Map {
                    "name": "test",
                    "status": "active",
                  },
                ]
              }
              dataSource={[Function]}
              dispatch={[Function]}
              error={null}
              filters={
                Immutable.Map {
                  "name": Immutable.Map {
                    "value": "",
                    "column": Immutable.Map {
                      "value": "name",
                      "label": "Name",
                      "sortable": true,
                      "filter": "startsWith",
                      "type": "text",
                    },
                  },
                  "status": Immutable.Map {
                    "value": "",
                    "column": Immutable.Map {
                      "value": "status",
                      "label": "Status",
                      "sortable": true,
                      "filter": "equals",
                      "type": "text",
                      "options": [Function],
                    },
                  },
                }
              }
              includeFooter={false}
              initialize={true}
              initializing={false}
              loading={false}
              mounted={true}
              nextPageToken={null}
              omitHeader={false}
              pageOffset={0}
              pageSize={25}
              pageTokens={Immutable.List []}
              rows={
                Immutable.List [
                  Immutable.Map {
                    "name": "test",
                    "status": "active",
                  },
                ]
              }
              sortColumn={null}
              sortDirection="desc"
              sortable={true}
              tableKey="mock-table-key"
              tableOptions={Object {}}
              uncontrolled={true}
              validFilters={true}
            >
              <TableComponent
                addColumns={
                  Array [
                    Object {
                      "components": Object {
                        "BodyCell": [Function],
                      },
                      "label": "Actions",
                      "value": "_action",
                    },
                  ]
                }
                alterColumns={Object {}}
                appliedFilters={
                  Immutable.Map {
                    "name": Immutable.Map {
                      "value": "",
                      "column": Immutable.Map {
                        "value": "name",
                        "label": "Name",
                        "sortable": true,
                        "filter": "startsWith",
                        "type": "text",
                      },
                    },
                    "status": Immutable.Map {
                      "value": "",
                      "column": Immutable.Map {
                        "value": "status",
                        "label": "Status",
                        "sortable": true,
                        "filter": "equals",
                        "type": "text",
                        "options": [Function],
                      },
                    },
                  }
                }
                auto={true}
                columnComponents={
                  Immutable.Map {
                    "_action": Object {
                      "BodyCell": [Function],
                    },
                  }
                }
                columnSet={
                  Immutable.List [
                    "_action",
                    "name",
                    "status",
                  ]
                }
                columns={
                  Immutable.List [
                    Immutable.Map {
                      "value": "_action",
                      "label": "Actions",
                      "components": Object {
                        "BodyCell": [Function],
                      },
                    },
                    Immutable.Map {
                      "value": "name",
                      "label": "Name",
                      "sortable": true,
                      "filter": "startsWith",
                      "type": "text",
                    },
                    Immutable.Map {
                      "value": "status",
                      "label": "Status",
                      "sortable": true,
                      "filter": "equals",
                      "type": "text",
                      "options": [Function],
                    },
                  ]
                }
                components={
                  Object {
                    "AttributesField": [Function],
                    "Body": [Function],
                    "BodyCell": [Function],
                    "BodyRow": [Function],
                    "BooleanFilter": [Function],
                    "CheckboxField": [Function],
                    "CodeField": [Function],
                    "EmptyBodyRow": [Function],
                    "FilterForm": undefined,
                    "FilterLayout": [Function],
                    "Footer": [Function],
                    "FooterCell": [Function],
                    "FooterRow": [Function],
                    "FormButtons": [Function],
                    "FormError": [Function],
                    "FormField": [Function],
                    "FormLayout": [Function],
                    "FormMultiField": [Function],
                    "Header": [Function],
                    "HeaderCell": [Function],
                    "HeaderRow": [Function],
                    "PaginationControl": [Function],
                    "PasswordField": [Function],
                    "RadioField": [Function],
                    "SelectField": [Function],
                    "SelectMultiField": [Function],
                    "TableField": [Function],
                    "TableLayout": [Function],
                    "TeamField": [Function],
                    "TeamMultiField": [Function],
                    "TextField": [Function],
                    "TextFilter": [Function],
                    "TextMultiField": [Function],
                    "UserField": [Function],
                    "UserMultiField": [Function],
                  }
                }
                configured={true}
                data={
                  Immutable.List [
                    Immutable.Map {
                      "name": "test",
                      "status": "active",
                    },
                  ]
                }
                dataSource={[Function]}
                dispatch={[Function]}
                error={null}
                filters={
                  Immutable.Map {
                    "name": Immutable.Map {
                      "value": "",
                      "column": Immutable.Map {
                        "value": "name",
                        "label": "Name",
                        "sortable": true,
                        "filter": "startsWith",
                        "type": "text",
                      },
                    },
                    "status": Immutable.Map {
                      "value": "",
                      "column": Immutable.Map {
                        "value": "status",
                        "label": "Status",
                        "sortable": true,
                        "filter": "equals",
                        "type": "text",
                        "options": [Function],
                      },
                    },
                  }
                }
                includeFooter={false}
                initialize={true}
                initializing={false}
                loading={false}
                mounted={true}
                nextPageToken={null}
                omitHeader={false}
                pageOffset={0}
                pageSize={25}
                pageTokens={Immutable.List []}
                rows={
                  Immutable.List [
                    Immutable.Map {
                      "name": "test",
                      "status": "active",
                    },
                  ]
                }
                sortColumn={null}
                sortDirection="desc"
                sortable={true}
                tableKey="mock-table-key"
                tableOptions={Object {}}
                uncontrolled={true}
                validFilters={true}
              >
                <TableViewMock
                  appliedFilters={
                    Immutable.Map {
                      "name": Immutable.Map {
                        "value": "",
                        "column": Immutable.Map {
                          "value": "name",
                          "label": "Name",
                          "sortable": true,
                          "filter": "startsWith",
                          "type": "text",
                        },
                      },
                      "status": Immutable.Map {
                        "value": "",
                        "column": Immutable.Map {
                          "value": "status",
                          "label": "Status",
                          "sortable": true,
                          "filter": "equals",
                          "type": "text",
                          "options": [Function],
                        },
                      },
                    }
                  }
                  error={null}
                  filter={
                    <FilterLayout
                      appliedFilters={
                        Immutable.Map {
                          "name": Immutable.Map {
                            "value": "",
                            "column": Immutable.Map {
                              "value": "name",
                              "label": "Name",
                              "sortable": true,
                              "filter": "startsWith",
                              "type": "text",
                            },
                          },
                          "status": Immutable.Map {
                            "value": "",
                            "column": Immutable.Map {
                              "value": "status",
                              "label": "Status",
                              "sortable": true,
                              "filter": "equals",
                              "type": "text",
                              "options": [Function],
                            },
                          },
                        }
                      }
                      columnSet={
                        Immutable.List [
                          "_action",
                          "name",
                          "status",
                        ]
                      }
                      filters={
                        Immutable.Map {
                          "name": <TextFilter
                            filters={
                              Immutable.Map {
                                "name": Immutable.Map {
                                  "value": "",
                                  "column": Immutable.Map {
                                    "value": "name",
                                    "label": "Name",
                                    "sortable": true,
                                    "filter": "startsWith",
                                    "type": "text",
                                  },
                                },
                                "status": Immutable.Map {
                                  "value": "",
                                  "column": Immutable.Map {
                                    "value": "status",
                                    "label": "Status",
                                    "sortable": true,
                                    "filter": "equals",
                                    "type": "text",
                                    "options": [Function],
                                  },
                                },
                              }
                            }
                            name="name"
                            onChange={[Function]}
                            options={Array []}
                            tableOptions={Object {}}
                            value=""
                          />,
                          "status": <TextFilter
                            filters={
                              Immutable.Map {
                                "name": Immutable.Map {
                                  "value": "",
                                  "column": Immutable.Map {
                                    "value": "name",
                                    "label": "Name",
                                    "sortable": true,
                                    "filter": "startsWith",
                                    "type": "text",
                                  },
                                },
                                "status": Immutable.Map {
                                  "value": "",
                                  "column": Immutable.Map {
                                    "value": "status",
                                    "label": "Status",
                                    "sortable": true,
                                    "filter": "equals",
                                    "type": "text",
                                    "options": [Function],
                                  },
                                },
                              }
                            }
                            name="status"
                            onChange={[Function]}
                            options={
                              Array [
                                Object {
                                  "label": "Active",
                                  "value": "active",
                                },
                                Object {
                                  "label": "Inactive",
                                  "value": "inactive",
                                },
                              ]
                            }
                            tableOptions={Object {}}
                            value=""
                          />,
                        }
                      }
                      initializing={false}
                      loading={false}
                      onChangeFilter={[Function]}
                      onClear={[Function]}
                      onReset={[Function]}
                      onSearch={[Function]}
                      tableKey="mock-table-key"
                      tableOptions={Object {}}
                      validFilters={true}
                    />
                  }
                  initializing={false}
                  loading={false}
                  pagination={
                    <PaginationControl
                      endIndex={1}
                      loading={false}
                      nextPage={null}
                      prevPage={null}
                      startIndex={1}
                    />
                  }
                  rows={
                    Immutable.List [
                      Immutable.Map {
                        "name": "test",
                        "status": "active",
                      },
                    ]
                  }
                  table={
                    <TableLayout
                      body={
                        <TableBody
                          empty={false}
                          error={null}
                          initializing={false}
                          loading={false}
                          tableOptions={Object {}}
                          tableRows={
                            Immutable.List [
                              <KeyWrapper>
                                <BodyRow
                                  cells={
                                    Immutable.List [
                                      <KeyWrapper>
                                        <ActionCell
                                          column={
                                            Immutable.Map {
                                              "value": "_action",
                                              "label": "Actions",
                                              "components": Object {
                                                "BodyCell": [Function],
                                              },
                                            }
                                          }
                                          index={0}
                                          row={
                                            Immutable.Map {
                                              "name": "test",
                                              "status": "active",
                                            }
                                          }
                                          rowIndex={0}
                                          rows={
                                            Immutable.List [
                                              Immutable.Map {
                                                "name": "test",
                                                "status": "active",
                                              },
                                            ]
                                          }
                                          tableKey="mock-table-key"
                                          tableOptions={Object {}}
                                        />
                                      </KeyWrapper>,
                                      <KeyWrapper>
                                        <BodyCell
                                          column={
                                            Immutable.Map {
                                              "value": "name",
                                              "label": "Name",
                                              "sortable": true,
                                              "filter": "startsWith",
                                              "type": "text",
                                            }
                                          }
                                          index={1}
                                          row={
                                            Immutable.Map {
                                              "name": "test",
                                              "status": "active",
                                            }
                                          }
                                          rowIndex={0}
                                          rows={
                                            Immutable.List [
                                              Immutable.Map {
                                                "name": "test",
                                                "status": "active",
                                              },
                                            ]
                                          }
                                          tableKey="mock-table-key"
                                          tableOptions={Object {}}
                                          value="test"
                                        />
                                      </KeyWrapper>,
                                      <KeyWrapper>
                                        <BodyCell
                                          column={
                                            Immutable.Map {
                                              "value": "status",
                                              "label": "Status",
                                              "sortable": true,
                                              "filter": "equals",
                                              "type": "text",
                                              "options": [Function],
                                            }
                                          }
                                          index={2}
                                          row={
                                            Immutable.Map {
                                              "name": "test",
                                              "status": "active",
                                            }
                                          }
                                          rowIndex={0}
                                          rows={
                                            Immutable.List [
                                              Immutable.Map {
                                                "name": "test",
                                                "status": "active",
                                              },
                                            ]
                                          }
                                          tableKey="mock-table-key"
                                          tableOptions={Object {}}
                                          value="active"
                                        />
                                      </KeyWrapper>,
                                    ]
                                  }
                                  columns={
                                    Immutable.List [
                                      Immutable.Map {
                                        "value": "_action",
                                        "label": "Actions",
                                        "components": Object {
                                          "BodyCell": [Function],
                                        },
                                      },
                                      Immutable.Map {
                                        "value": "name",
                                        "label": "Name",
                                        "sortable": true,
                                        "filter": "startsWith",
                                        "type": "text",
                                      },
                                      Immutable.Map {
                                        "value": "status",
                                        "label": "Status",
                                        "sortable": true,
                                        "filter": "equals",
                                        "type": "text",
                                        "options": [Function],
                                      },
                                    ]
                                  }
                                  index={0}
                                  row={
                                    Immutable.Map {
                                      "name": "test",
                                      "status": "active",
                                    }
                                  }
                                  tableOptions={Object {}}
                                />
                              </KeyWrapper>,
                            ]
                          }
                        />
                      }
                      empty={false}
                      error={null}
                      footer={null}
                      header={
                        <Header
                          headerRow={
                            <HeaderRow
                              columnHeaders={
                                Immutable.List [
                                  <KeyWrapper>
                                    <HeaderCell
                                      onSortColumn={[Function]}
                                      sorting={false}
                                      tableOptions={Object {}}
                                    />
                                  </KeyWrapper>,
                                  <KeyWrapper>
                                    <HeaderCell
                                      onSortColumn={[Function]}
                                      sortable={true}
                                      sorting={false}
                                      tableOptions={Object {}}
                                    />
                                  </KeyWrapper>,
                                  <KeyWrapper>
                                    <HeaderCell
                                      onSortColumn={[Function]}
                                      sortable={true}
                                      sorting={false}
                                      tableOptions={Object {}}
                                    />
                                  </KeyWrapper>,
                                ]
                              }
                              rows={
                                Immutable.List [
                                  Immutable.Map {
                                    "name": "test",
                                    "status": "active",
                                  },
                                ]
                              }
                              tableOptions={Object {}}
                            />
                          }
                          rows={
                            Immutable.List [
                              Immutable.Map {
                                "name": "test",
                                "status": "active",
                              },
                            ]
                          }
                          sortable={true}
                          tableOptions={Object {}}
                        />
                      }
                      initializing={false}
                      loading={false}
                      tableOptions={Object {}}
                    />
                  }
                >
                  <TableLayout
                    body={
                      <TableBody
                        empty={false}
                        error={null}
                        initializing={false}
                        loading={false}
                        tableOptions={Object {}}
                        tableRows={
                          Immutable.List [
                            <KeyWrapper>
                              <BodyRow
                                cells={
                                  Immutable.List [
                                    <KeyWrapper>
                                      <ActionCell
                                        column={
                                          Immutable.Map {
                                            "value": "_action",
                                            "label": "Actions",
                                            "components": Object {
                                              "BodyCell": [Function],
                                            },
                                          }
                                        }
                                        index={0}
                                        row={
                                          Immutable.Map {
                                            "name": "test",
                                            "status": "active",
                                          }
                                        }
                                        rowIndex={0}
                                        rows={
                                          Immutable.List [
                                            Immutable.Map {
                                              "name": "test",
                                              "status": "active",
                                            },
                                          ]
                                        }
                                        tableKey="mock-table-key"
                                        tableOptions={Object {}}
                                      />
                                    </KeyWrapper>,
                                    <KeyWrapper>
                                      <BodyCell
                                        column={
                                          Immutable.Map {
                                            "value": "name",
                                            "label": "Name",
                                            "sortable": true,
                                            "filter": "startsWith",
                                            "type": "text",
                                          }
                                        }
                                        index={1}
                                        row={
                                          Immutable.Map {
                                            "name": "test",
                                            "status": "active",
                                          }
                                        }
                                        rowIndex={0}
                                        rows={
                                          Immutable.List [
                                            Immutable.Map {
                                              "name": "test",
                                              "status": "active",
                                            },
                                          ]
                                        }
                                        tableKey="mock-table-key"
                                        tableOptions={Object {}}
                                        value="test"
                                      />
                                    </KeyWrapper>,
                                    <KeyWrapper>
                                      <BodyCell
                                        column={
                                          Immutable.Map {
                                            "value": "status",
                                            "label": "Status",
                                            "sortable": true,
                                            "filter": "equals",
                                            "type": "text",
                                            "options": [Function],
                                          }
                                        }
                                        index={2}
                                        row={
                                          Immutable.Map {
                                            "name": "test",
                                            "status": "active",
                                          }
                                        }
                                        rowIndex={0}
                                        rows={
                                          Immutable.List [
                                            Immutable.Map {
                                              "name": "test",
                                              "status": "active",
                                            },
                                          ]
                                        }
                                        tableKey="mock-table-key"
                                        tableOptions={Object {}}
                                        value="active"
                                      />
                                    </KeyWrapper>,
                                  ]
                                }
                                columns={
                                  Immutable.List [
                                    Immutable.Map {
                                      "value": "_action",
                                      "label": "Actions",
                                      "components": Object {
                                        "BodyCell": [Function],
                                      },
                                    },
                                    Immutable.Map {
                                      "value": "name",
                                      "label": "Name",
                                      "sortable": true,
                                      "filter": "startsWith",
                                      "type": "text",
                                    },
                                    Immutable.Map {
                                      "value": "status",
                                      "label": "Status",
                                      "sortable": true,
                                      "filter": "equals",
                                      "type": "text",
                                      "options": [Function],
                                    },
                                  ]
                                }
                                index={0}
                                row={
                                  Immutable.Map {
                                    "name": "test",
                                    "status": "active",
                                  }
                                }
                                tableOptions={Object {}}
                              />
                            </KeyWrapper>,
                          ]
                        }
                      />
                    }
                    empty={false}
                    error={null}
                    footer={null}
                    header={
                      <Header
                        headerRow={
                          <HeaderRow
                            columnHeaders={
                              Immutable.List [
                                <KeyWrapper>
                                  <HeaderCell
                                    onSortColumn={[Function]}
                                    sorting={false}
                                    tableOptions={Object {}}
                                  />
                                </KeyWrapper>,
                                <KeyWrapper>
                                  <HeaderCell
                                    onSortColumn={[Function]}
                                    sortable={true}
                                    sorting={false}
                                    tableOptions={Object {}}
                                  />
                                </KeyWrapper>,
                                <KeyWrapper>
                                  <HeaderCell
                                    onSortColumn={[Function]}
                                    sortable={true}
                                    sorting={false}
                                    tableOptions={Object {}}
                                  />
                                </KeyWrapper>,
                              ]
                            }
                            rows={
                              Immutable.List [
                                Immutable.Map {
                                  "name": "test",
                                  "status": "active",
                                },
                              ]
                            }
                            tableOptions={Object {}}
                          />
                        }
                        rows={
                          Immutable.List [
                            Immutable.Map {
                              "name": "test",
                              "status": "active",
                            },
                          ]
                        }
                        sortable={true}
                        tableOptions={Object {}}
                      />
                    }
                    initializing={false}
                    loading={false}
                    tableOptions={Object {}}
                  >
                    <table>
                      <Header
                        headerRow={
                          <HeaderRow
                            columnHeaders={
                              Immutable.List [
                                <KeyWrapper>
                                  <HeaderCell
                                    onSortColumn={[Function]}
                                    sorting={false}
                                    tableOptions={Object {}}
                                  />
                                </KeyWrapper>,
                                <KeyWrapper>
                                  <HeaderCell
                                    onSortColumn={[Function]}
                                    sortable={true}
                                    sorting={false}
                                    tableOptions={Object {}}
                                  />
                                </KeyWrapper>,
                                <KeyWrapper>
                                  <HeaderCell
                                    onSortColumn={[Function]}
                                    sortable={true}
                                    sorting={false}
                                    tableOptions={Object {}}
                                  />
                                </KeyWrapper>,
                              ]
                            }
                            rows={
                              Immutable.List [
                                Immutable.Map {
                                  "name": "test",
                                  "status": "active",
                                },
                              ]
                            }
                            tableOptions={Object {}}
                          />
                        }
                        rows={
                          Immutable.List [
                            Immutable.Map {
                              "name": "test",
                              "status": "active",
                            },
                          ]
                        }
                        sortable={true}
                        tableOptions={Object {}}
                      >
                        <thead>
                          <HeaderRow
                            columnHeaders={
                              Immutable.List [
                                <KeyWrapper>
                                  <HeaderCell
                                    onSortColumn={[Function]}
                                    sorting={false}
                                    tableOptions={Object {}}
                                  />
                                </KeyWrapper>,
                                <KeyWrapper>
                                  <HeaderCell
                                    onSortColumn={[Function]}
                                    sortable={true}
                                    sorting={false}
                                    tableOptions={Object {}}
                                  />
                                </KeyWrapper>,
                                <KeyWrapper>
                                  <HeaderCell
                                    onSortColumn={[Function]}
                                    sortable={true}
                                    sorting={false}
                                    tableOptions={Object {}}
                                  />
                                </KeyWrapper>,
                              ]
                            }
                            rows={
                              Immutable.List [
                                Immutable.Map {
                                  "name": "test",
                                  "status": "active",
                                },
                              ]
                            }
                            tableOptions={Object {}}
                          >
                            <tr>
                              <KeyWrapper
                                key="column-0"
                              >
                                <HeaderCell
                                  onSortColumn={[Function]}
                                  sorting={false}
                                  tableOptions={Object {}}
                                >
                                  <th>
                                    <span>
                                      <I18n />
                                      <button
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        <span>
                                          –
                                        </span>
                                      </button>
                                    </span>
                                  </th>
                                </HeaderCell>
                              </KeyWrapper>
                              <KeyWrapper
                                key="column-1"
                              >
                                <HeaderCell
                                  onSortColumn={[Function]}
                                  sortable={true}
                                  sorting={false}
                                  tableOptions={Object {}}
                                >
                                  <th>
                                    <span>
                                      <I18n />
                                      <button
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        <span>
                                          –
                                        </span>
                                      </button>
                                    </span>
                                  </th>
                                </HeaderCell>
                              </KeyWrapper>
                              <KeyWrapper
                                key="column-2"
                              >
                                <HeaderCell
                                  onSortColumn={[Function]}
                                  sortable={true}
                                  sorting={false}
                                  tableOptions={Object {}}
                                >
                                  <th>
                                    <span>
                                      <I18n />
                                      <button
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        <span>
                                          –
                                        </span>
                                      </button>
                                    </span>
                                  </th>
                                </HeaderCell>
                              </KeyWrapper>
                            </tr>
                          </HeaderRow>
                        </thead>
                      </Header>
                      <TableBody
                        empty={false}
                        error={null}
                        initializing={false}
                        loading={false}
                        tableOptions={Object {}}
                        tableRows={
                          Immutable.List [
                            <KeyWrapper>
                              <BodyRow
                                cells={
                                  Immutable.List [
                                    <KeyWrapper>
                                      <ActionCell
                                        column={
                                          Immutable.Map {
                                            "value": "_action",
                                            "label": "Actions",
                                            "components": Object {
                                              "BodyCell": [Function],
                                            },
                                          }
                                        }
                                        index={0}
                                        row={
                                          Immutable.Map {
                                            "name": "test",
                                            "status": "active",
                                          }
                                        }
                                        rowIndex={0}
                                        rows={
                                          Immutable.List [
                                            Immutable.Map {
                                              "name": "test",
                                              "status": "active",
                                            },
                                          ]
                                        }
                                        tableKey="mock-table-key"
                                        tableOptions={Object {}}
                                      />
                                    </KeyWrapper>,
                                    <KeyWrapper>
                                      <BodyCell
                                        column={
                                          Immutable.Map {
                                            "value": "name",
                                            "label": "Name",
                                            "sortable": true,
                                            "filter": "startsWith",
                                            "type": "text",
                                          }
                                        }
                                        index={1}
                                        row={
                                          Immutable.Map {
                                            "name": "test",
                                            "status": "active",
                                          }
                                        }
                                        rowIndex={0}
                                        rows={
                                          Immutable.List [
                                            Immutable.Map {
                                              "name": "test",
                                              "status": "active",
                                            },
                                          ]
                                        }
                                        tableKey="mock-table-key"
                                        tableOptions={Object {}}
                                        value="test"
                                      />
                                    </KeyWrapper>,
                                    <KeyWrapper>
                                      <BodyCell
                                        column={
                                          Immutable.Map {
                                            "value": "status",
                                            "label": "Status",
                                            "sortable": true,
                                            "filter": "equals",
                                            "type": "text",
                                            "options": [Function],
                                          }
                                        }
                                        index={2}
                                        row={
                                          Immutable.Map {
                                            "name": "test",
                                            "status": "active",
                                          }
                                        }
                                        rowIndex={0}
                                        rows={
                                          Immutable.List [
                                            Immutable.Map {
                                              "name": "test",
                                              "status": "active",
                                            },
                                          ]
                                        }
                                        tableKey="mock-table-key"
                                        tableOptions={Object {}}
                                        value="active"
                                      />
                                    </KeyWrapper>,
                                  ]
                                }
                                columns={
                                  Immutable.List [
                                    Immutable.Map {
                                      "value": "_action",
                                      "label": "Actions",
                                      "components": Object {
                                        "BodyCell": [Function],
                                      },
                                    },
                                    Immutable.Map {
                                      "value": "name",
                                      "label": "Name",
                                      "sortable": true,
                                      "filter": "startsWith",
                                      "type": "text",
                                    },
                                    Immutable.Map {
                                      "value": "status",
                                      "label": "Status",
                                      "sortable": true,
                                      "filter": "equals",
                                      "type": "text",
                                      "options": [Function],
                                    },
                                  ]
                                }
                                index={0}
                                row={
                                  Immutable.Map {
                                    "name": "test",
                                    "status": "active",
                                  }
                                }
                                tableOptions={Object {}}
                              />
                            </KeyWrapper>,
                          ]
                        }
                      >
                        <tbody>
                          <KeyWrapper
                            key="row-0"
                          >
                            <BodyRow
                              cells={
                                Immutable.List [
                                  <KeyWrapper>
                                    <ActionCell
                                      column={
                                        Immutable.Map {
                                          "value": "_action",
                                          "label": "Actions",
                                          "components": Object {
                                            "BodyCell": [Function],
                                          },
                                        }
                                      }
                                      index={0}
                                      row={
                                        Immutable.Map {
                                          "name": "test",
                                          "status": "active",
                                        }
                                      }
                                      rowIndex={0}
                                      rows={
                                        Immutable.List [
                                          Immutable.Map {
                                            "name": "test",
                                            "status": "active",
                                          },
                                        ]
                                      }
                                      tableKey="mock-table-key"
                                      tableOptions={Object {}}
                                    />
                                  </KeyWrapper>,
                                  <KeyWrapper>
                                    <BodyCell
                                      column={
                                        Immutable.Map {
                                          "value": "name",
                                          "label": "Name",
                                          "sortable": true,
                                          "filter": "startsWith",
                                          "type": "text",
                                        }
                                      }
                                      index={1}
                                      row={
                                        Immutable.Map {
                                          "name": "test",
                                          "status": "active",
                                        }
                                      }
                                      rowIndex={0}
                                      rows={
                                        Immutable.List [
                                          Immutable.Map {
                                            "name": "test",
                                            "status": "active",
                                          },
                                        ]
                                      }
                                      tableKey="mock-table-key"
                                      tableOptions={Object {}}
                                      value="test"
                                    />
                                  </KeyWrapper>,
                                  <KeyWrapper>
                                    <BodyCell
                                      column={
                                        Immutable.Map {
                                          "value": "status",
                                          "label": "Status",
                                          "sortable": true,
                                          "filter": "equals",
                                          "type": "text",
                                          "options": [Function],
                                        }
                                      }
                                      index={2}
                                      row={
                                        Immutable.Map {
                                          "name": "test",
                                          "status": "active",
                                        }
                                      }
                                      rowIndex={0}
                                      rows={
                                        Immutable.List [
                                          Immutable.Map {
                                            "name": "test",
                                            "status": "active",
                                          },
                                        ]
                                      }
                                      tableKey="mock-table-key"
                                      tableOptions={Object {}}
                                      value="active"
                                    />
                                  </KeyWrapper>,
                                ]
                              }
                              columns={
                                Immutable.List [
                                  Immutable.Map {
                                    "value": "_action",
                                    "label": "Actions",
                                    "components": Object {
                                      "BodyCell": [Function],
                                    },
                                  },
                                  Immutable.Map {
                                    "value": "name",
                                    "label": "Name",
                                    "sortable": true,
                                    "filter": "startsWith",
                                    "type": "text",
                                  },
                                  Immutable.Map {
                                    "value": "status",
                                    "label": "Status",
                                    "sortable": true,
                                    "filter": "equals",
                                    "type": "text",
                                    "options": [Function],
                                  },
                                ]
                              }
                              index={0}
                              row={
                                Immutable.Map {
                                  "name": "test",
                                  "status": "active",
                                }
                              }
                              tableOptions={Object {}}
                            >
                              <tr>
                                <KeyWrapper
                                  key="column-0"
                                >
                                  <ActionCell
                                    column={
                                      Immutable.Map {
                                        "value": "_action",
                                        "label": "Actions",
                                        "components": Object {
                                          "BodyCell": [Function],
                                        },
                                      }
                                    }
                                    index={0}
                                    row={
                                      Immutable.Map {
                                        "name": "test",
                                        "status": "active",
                                      }
                                    }
                                    rowIndex={0}
                                    rows={
                                      Immutable.List [
                                        Immutable.Map {
                                          "name": "test",
                                          "status": "active",
                                        },
                                      ]
                                    }
                                    tableKey="mock-table-key"
                                    tableOptions={Object {}}
                                  >
                                    <td />
                                  </ActionCell>
                                </KeyWrapper>
                                <KeyWrapper
                                  key="column-1"
                                >
                                  <BodyCell
                                    column={
                                      Immutable.Map {
                                        "value": "name",
                                        "label": "Name",
                                        "sortable": true,
                                        "filter": "startsWith",
                                        "type": "text",
                                      }
                                    }
                                    index={1}
                                    row={
                                      Immutable.Map {
                                        "name": "test",
                                        "status": "active",
                                      }
                                    }
                                    rowIndex={0}
                                    rows={
                                      Immutable.List [
                                        Immutable.Map {
                                          "name": "test",
                                          "status": "active",
                                        },
                                      ]
                                    }
                                    tableKey="mock-table-key"
                                    tableOptions={Object {}}
                                    value="test"
                                  >
                                    <td>
                                      test
                                    </td>
                                  </BodyCell>
                                </KeyWrapper>
                                <KeyWrapper
                                  key="column-2"
                                >
                                  <BodyCell
                                    column={
                                      Immutable.Map {
                                        "value": "status",
                                        "label": "Status",
                                        "sortable": true,
                                        "filter": "equals",
                                        "type": "text",
                                        "options": [Function],
                                      }
                                    }
                                    index={2}
                                    row={
                                      Immutable.Map {
                                        "name": "test",
                                        "status": "active",
                                      }
                                    }
                                    rowIndex={0}
                                    rows={
                                      Immutable.List [
                                        Immutable.Map {
                                          "name": "test",
                                          "status": "active",
                                        },
                                      ]
                                    }
                                    tableKey="mock-table-key"
                                    tableOptions={Object {}}
                                    value="active"
                                  >
                                    <td>
                                      active
                                    </td>
                                  </BodyCell>
                                </KeyWrapper>
                              </tr>
                            </BodyRow>
                          </KeyWrapper>
                        </tbody>
                      </TableBody>
                    </table>
                  </TableLayout>
                  <PaginationControl
                    endIndex={1}
                    loading={false}
                    nextPage={null}
                    prevPage={null}
                    startIndex={1}
                  >
                    <div>
                      <button
                        disabled={true}
                        onClick={null}
                      >
                        <I18n>
                          <I18nTranslate
                            context="shared"
                            loadTranslations={[Function]}
                            locale="en"
                            translations={Immutable.Map {}}
                          />
                        </I18n>
                      </button>
                      <button
                        disabled={true}
                        onClick={null}
                      >
                        <I18n>
                          <I18nTranslate
                            context="shared"
                            loadTranslations={[Function]}
                            locale="en"
                            translations={Immutable.Map {}}
                          />
                        </I18n>
                      </button>
                    </div>
                  </PaginationControl>
                  <FilterLayout
                    appliedFilters={
                      Immutable.Map {
                        "name": Immutable.Map {
                          "value": "",
                          "column": Immutable.Map {
                            "value": "name",
                            "label": "Name",
                            "sortable": true,
                            "filter": "startsWith",
                            "type": "text",
                          },
                        },
                        "status": Immutable.Map {
                          "value": "",
                          "column": Immutable.Map {
                            "value": "status",
                            "label": "Status",
                            "sortable": true,
                            "filter": "equals",
                            "type": "text",
                            "options": [Function],
                          },
                        },
                      }
                    }
                    columnSet={
                      Immutable.List [
                        "_action",
                        "name",
                        "status",
                      ]
                    }
                    filters={
                      Immutable.Map {
                        "name": <TextFilter
                          filters={
                            Immutable.Map {
                              "name": Immutable.Map {
                                "value": "",
                                "column": Immutable.Map {
                                  "value": "name",
                                  "label": "Name",
                                  "sortable": true,
                                  "filter": "startsWith",
                                  "type": "text",
                                },
                              },
                              "status": Immutable.Map {
                                "value": "",
                                "column": Immutable.Map {
                                  "value": "status",
                                  "label": "Status",
                                  "sortable": true,
                                  "filter": "equals",
                                  "type": "text",
                                  "options": [Function],
                                },
                              },
                            }
                          }
                          name="name"
                          onChange={[Function]}
                          options={Array []}
                          tableOptions={Object {}}
                          value=""
                        />,
                        "status": <TextFilter
                          filters={
                            Immutable.Map {
                              "name": Immutable.Map {
                                "value": "",
                                "column": Immutable.Map {
                                  "value": "name",
                                  "label": "Name",
                                  "sortable": true,
                                  "filter": "startsWith",
                                  "type": "text",
                                },
                              },
                              "status": Immutable.Map {
                                "value": "",
                                "column": Immutable.Map {
                                  "value": "status",
                                  "label": "Status",
                                  "sortable": true,
                                  "filter": "equals",
                                  "type": "text",
                                  "options": [Function],
                                },
                              },
                            }
                          }
                          name="status"
                          onChange={[Function]}
                          options={
                            Array [
                              Object {
                                "label": "Active",
                                "value": "active",
                              },
                              Object {
                                "label": "Inactive",
                                "value": "inactive",
                              },
                            ]
                          }
                          tableOptions={Object {}}
                          value=""
                        />,
                      }
                    }
                    initializing={false}
                    loading={false}
                    onChangeFilter={[Function]}
                    onClear={[Function]}
                    onReset={[Function]}
                    onSearch={[Function]}
                    tableKey="mock-table-key"
                    tableOptions={Object {}}
                    validFilters={true}
                  >
                    <form
                      onSubmit={[Function]}
                    >
                      <TextFilter
                        filters={
                          Immutable.Map {
                            "name": Immutable.Map {
                              "value": "",
                              "column": Immutable.Map {
                                "value": "name",
                                "label": "Name",
                                "sortable": true,
                                "filter": "startsWith",
                                "type": "text",
                              },
                            },
                            "status": Immutable.Map {
                              "value": "",
                              "column": Immutable.Map {
                                "value": "status",
                                "label": "Status",
                                "sortable": true,
                                "filter": "equals",
                                "type": "text",
                                "options": [Function],
                              },
                            },
                          }
                        }
                        name="name"
                        onChange={[Function]}
                        options={Array []}
                        tableOptions={Object {}}
                        value=""
                      >
                        <div>
                          <label
                            htmlFor="filter-input-name"
                          >
                            <I18n />
                            :
                          </label>
                          <input
                            id="filter-input-name"
                            name="filter-input"
                            onChange={[Function]}
                            type="text"
                            value=""
                          />
                        </div>
                      </TextFilter>
                      <TextFilter
                        filters={
                          Immutable.Map {
                            "name": Immutable.Map {
                              "value": "",
                              "column": Immutable.Map {
                                "value": "name",
                                "label": "Name",
                                "sortable": true,
                                "filter": "startsWith",
                                "type": "text",
                              },
                            },
                            "status": Immutable.Map {
                              "value": "",
                              "column": Immutable.Map {
                                "value": "status",
                                "label": "Status",
                                "sortable": true,
                                "filter": "equals",
                                "type": "text",
                                "options": [Function],
                              },
                            },
                          }
                        }
                        name="status"
                        onChange={[Function]}
                        options={
                          Array [
                            Object {
                              "label": "Active",
                              "value": "active",
                            },
                            Object {
                              "label": "Inactive",
                              "value": "inactive",
                            },
                          ]
                        }
                        tableOptions={Object {}}
                        value=""
                      >
                        <div>
                          <label
                            htmlFor="filter-input-status"
                          >
                            <I18n />
                            :
                          </label>
                          <input
                            id="filter-input-status"
                            name="filter-input"
                            onChange={[Function]}
                            type="text"
                            value=""
                          />
                        </div>
                      </TextFilter>
                      <button
                        type="submit"
                      >
                        Search
                      </button>
                    </form>
                  </FilterLayout>
                </TableViewMock>
              </TableComponent>
            </lifecycle(TableComponent)>
          </Connect(lifecycle(TableComponent))>
        </Table>
      </Component>
    </I18nProvider>
  </Provider>
</KineticLib>
`;
